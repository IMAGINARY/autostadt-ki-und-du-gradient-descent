{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/controls/controls.js","js/controls/gamepad.js","js/controls/keyboard.js","js/controls/screen.js","js/game-mode-numplayers.js","js/game-mode-play.js","js/game-mode-title.js","js/game-mode.js","js/game.js","js/main.js","js/terrain.js","js/waves.js","js/wavy-animation.js","node_modules/events/events.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Controls","count","_classCallCheck","this","states","Array","fill","map","_","left","right","action","statesModified","id","key","value","result","s","Object","assign","_controls","GamepadControls","_super","_this","_toConsumableArray","from","navigator","getGamepads","filter","gp","index","forEach","modifyState","axes","buttons","pressed","updateState","_get","_getPrototypeOf","prototype","keyMap","ArrowLeft","prop","ArrowRight","ArrowDown","KeyA","KeyD","KeyS","KeyboardControls","keyCallback","ev","type","window","addEventListener","ScreenControls","element","document","createElement","classList","add","concat","appendChild","buildControl","mousePressedButton","name","remove","_this2","root","newButton","button","checkTouches","targetTouches","preventDefault","setAttribute","passive","_gameMode","PlayerNumberMode","$overlay","$","game","overlay","maxPlayers","config","selectedNumber","selectorItems","text","IMAGINARY","i18n","appendTo","$selector","addClass","toggleClass","inputs","lastInputs","newSelection","find","ctrl","direction","Math","max","min","removeClass","numPlayers","triggerEvent","_interopRequireDefault","_terrain","waves","_interopRequireWildcard","TERRAIN_DISTANCE","PlayMode","wavesPoints","points","draw","width","loadSVGSymbol","shipSymbol","attr","overflow","treasureClosedSymbol","treasureOpenedSymbol","modeGroup","group","translate","players","playerIndex","x","transform","translateX","boat","use","center","probeParent","probe","line","height","circle","translateY","probeClip","rect","PROBE_SIZE","move","clipWith","flipX","probing","water","polyline","groundGroup","terrainOptions","marginWidth","terrainHeights","terrainPoints","h","treasureLocation","locateTreasure","console","log","behindGroundGroup","treasure","y","treasureClosed","treasureOpened","hide","ground","groundClip","clip","tangents","delta","_this3","_this$game2","slice","input","player","terrainHeight","probeHeight","probeDuration","runnerDown","animate","after","addGroundClip","addTangent","abs","TREASURE_SIZE","uncoverGround","showGameOverSequence","ts","_this$game3","plot","slope","boatTransform","rotate","atan2","PI","flip","terrainHeightExt","xInArray","tmpIndex","floor","i0","i1","h0","h1","array","treasureIndex","reduce","m","arr","_this$terrainHeightEx","angle","w","polygon","scaleX","show","dy","Promise","resolve","ease","pos","sqrt","all","children","winner","delay","ms","setTimeout","treasureAnnouncement","treasureString","random","randomElement","$treasureAnnouncement","$treasureString","css","$inner","append","bottom","$outer","empty","_wavyAnimation","TitleMode","logoSprite","poly","findOne","pressToStart","textContent","size","stroke","color","duration","wavyStep","animCounter","_events","GameMode","events","emit","_gameModePlay","_gameModeTitle","_gameModeNumplayers","_gamepad","_screen","_keyboard","GradientDescentGame","container","createInputs","inputsLast","gameLoop","isPaused","modes","currentMode","controls","debugControlsPane","viewContainer","svgDoc","SVG","addTo","viewbox","nested","useScreenControls","screen","useGamepads","gamepad","useKeyboardControls","keyboard","debugControls","registerMode","continuousGame","transition","setMode","uri","clearStyles","fetch","response","status","statusText","symbol","newSymbol","svg","inputReducer","accInput","curState","values","getStates","join","lastTs","lag","readInputs","handleInputs","requestAnimationFrame","run","mode","preLoadAssets","modeID","pause","handleExitMode","undefined","clear","innerHTML","handleEnterMode","resume","modeId","event","nextModeId","arguments","callback","on","_game","_main","defaultConfig","defaultLanguage","loadConfig","_callee2","regeneratorRuntime","wrap","_context2","prev","next","sent","json","abrupt","t0","message","stop","_asyncToGenerator","mark","_callee","_context","t1","t2","t3","init","queryStringVariable","translationsDirectory","querySelector","t4","error","apply","numSamples","options","defaultOptions","numHeights","heights","j","convertPointsToHeights","smoothChaikin","num","open","l","smooth","flat","numPoints","marginHeight","jitter","Float32Array","marginIndices","predefinedHeights","_ref","_ref2","_slicedToArray","_ref3","_ref4","_ref5","_ref6","generateInnerTerrainHeights","leftHeight","rightHeight","_subdivide","subarray","generateTerrainPoints","smoothing","PERIOD","cos","xScale","yScale","sin","shape","userOptions","xAmplitude","cycles","polygons","originalPlots","maxY","counter","progress","pow","objectCreate","create","proto","F","objectKeys","keys","obj","k","hasOwnProperty","push","bind","Function","context","fn","EventEmitter","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","defineProperty","err","$getMaxListeners","that","_addListener","target","listener","prepend","existing","TypeError","newListener","unshift","warned","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","args","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","enumerable","get","set","arg","setMaxListeners","isNaN","getMaxListeners","er","handler","len","doError","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,4PCIqBK,aAOnB,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GACjBG,KAAKC,OAASC,MAAMJ,GACjBK,KAAK,MACLC,IAAI,SAAAC,GAAC,MAAK,CACTC,MAAM,EACNC,OAAO,EACPC,QAAQ,KAEZR,KAAKS,gBAAiB,6DAQZC,EAAIC,EAAKC,GACfZ,KAAKC,OAAOS,GAAIC,KAASC,IAC3BZ,KAAKC,OAAOS,GAAIC,GAAOC,EACvBZ,KAAKS,gBAAiB,uCAiBxB,GAAIT,KAAKS,eAAgB,CACvB,IAAMI,EAASb,KAAKC,OAGpB,OAFAD,KAAKC,OAASD,KAAKC,OAAOG,IAAI,SAAAU,GAAC,OAAIC,OAAOC,OAAO,GAAIF,KACrDd,KAAKS,gBAAiB,EACfI,EAEP,OAAOb,KAAKC,+JCrDlB,MAAAgB,KAAA/B,EAAA,uuEAMqBgC,mPAAwBD,EAAA,6BAO3C,SAAAC,EAAYpB,GAAO,mGAAAC,CAAAC,KAAAkB,GAAAC,EAAA1B,KAAAO,KACXF,sDAGM,IAAAsB,EAAApB,KAEZA,KAAKC,OAALoB,EAAkBrB,KAAKC,QACvBC,MAAMoB,KAAKC,UAAUC,eAClBC,OAAO,SAAAC,GAAE,OAAW,OAAPA,GAAeA,EAAGC,MAAQP,EAAKnB,OAAOP,SACnDkC,QAAQ,SAAAF,GACPN,EAAKS,YAAYH,EAAGC,MAAO,OAAQD,EAAGI,KAAK,IAAM,IACjDV,EAAKS,YAAYH,EAAGC,MAAO,QAAsB,GAAbD,EAAGI,KAAK,IAC5CV,EAAKS,YAAYH,EAAGC,MAAO,SAAUD,EAAGK,QAAQ,GAAGC,SAAWN,EAAGK,QAAQ,GAAGC,+CAkBhF,OADAhC,KAAKiC,cACLC,EAAAC,EAAAjB,EAAAkB,WAAA,YAAApC,MAAAP,KAAAO,4KC3CJ,MAAAiB,KAAA/B,EAAA,4iCAEA,IAAMmD,EAAS,CACbC,UAAa,CAAE5B,GAAI,EAAG6B,KAAM,QAC5BC,WAAc,CAAE9B,GAAI,EAAG6B,KAAM,SAC7BE,UAAa,CAAE/B,GAAI,EAAG6B,KAAM,UAC5BG,KAAQ,CAAEhC,GAAI,EAAG6B,KAAM,QACvBI,KAAQ,CAAEjC,GAAI,EAAG6B,KAAM,SACvBK,KAAQ,CAAElC,GAAI,EAAG6B,KAAM,WASJM,mPAAyB5B,EAAA,uBAO5C,SAAA4B,EAAY/C,GAAO,IAAAsB,+FAAArB,CAAAC,KAAA6C,GACjBzB,EAAAD,EAAA1B,KAAAO,KAAMF,GAEc,SAAdgD,EAAcC,GAClB,IAAMpC,EAAM0B,EAAOU,EAAGzD,MAClBqB,GAAOA,EAAID,GAAKZ,GAClBsB,EAAKS,YAAYlB,EAAID,GAAIC,EAAI4B,KAAkB,YAAZQ,EAAGC,MANzB,OASjBC,OAAOC,iBAAiB,UAAWJ,GACnCG,OAAOC,iBAAiB,QAASJ,GAVhB1B,+ICxBrB,MAAAH,KAAA/B,EAAA,stCAQqBiE,mPAAuBlC,EAAA,6BAO1C,SAAAkC,EAAYrD,GAAO,IAAAsB,+FAAArB,CAAAC,KAAAmD,IACjB/B,EAAAD,EAAA1B,KAAAO,KAAMF,IACDsD,QAAUC,SAASC,cAAc,OACtClC,EAAKgC,QAAQG,UAAUC,IAAI,mBAC3BpC,EAAKgC,QAAQG,UAAUC,IAAvB,QAAAC,OAAmC3D,EAAnC,cAEA,IAAK,IAAIf,EAAI,EAAGA,EAAIqC,EAAKnB,OAAOP,SAAUX,EACxCqC,EAAKgC,QAAQM,YAAYtC,EAAKuC,aAAa5E,IAP5B,OAUjBqC,EAAKwC,mBAAqB,KAC1BX,OAAOC,iBAAiB,UAAW,WACD,OAA5B9B,EAAKwC,qBACPxC,EAAKS,YAAYT,EAAKwC,mBAAmBlD,GAAIU,EAAKwC,mBAAmBC,MAAM,GAC3EzC,EAAKwC,mBAAmBR,QAAQG,UAAUO,OAAO,UACjD1C,EAAKwC,mBAAqB,QAfbxC,oDA4BNV,GAAI,IAAAqD,EAAA/D,KACTgE,EAAOX,SAASC,cAAc,OACpCU,EAAKT,UAAUC,IAAI,iBAAnB,kBAAAC,OAAuD/C,IAErC,SAAZuD,EAAaJ,GACjB,IAAMK,EAASb,SAASC,cAAc,UAIjB,SAAfa,EAAgBpB,GACU,EAA1BA,EAAGqB,cAAc1E,QACnBqE,EAAKlC,YAAYnB,EAAImD,GAAM,GAC3BK,EAAOX,UAAUC,IAAI,YAErBO,EAAKlC,YAAYnB,EAAImD,GAAM,GAC3BK,EAAOX,UAAUO,OAAO,WAE1Bf,EAAGsB,iBAkBL,OA7BAH,EAAOI,aAAa,OAAQ,UAC5BJ,EAAOX,UAAUC,IAAIK,GAarBK,EAAOhB,iBAAiB,aAAciB,EAAc,CAAEI,SAAS,IAC/DL,EAAOhB,iBAAiB,YAAaiB,EAAc,CAAEI,SAAS,IAC9DL,EAAOhB,iBAAiB,WAAYiB,EAAc,CAAEI,SAAS,IAC7DL,EAAOhB,iBAAiB,cAAeiB,EAAc,CAAEI,SAAS,IAEhEL,EAAOhB,iBAAiB,YAAa,WACnCa,EAAKlC,YAAYnB,EAAImD,GAAM,GAC3BK,EAAOX,UAAUC,IAAI,UACrBO,EAAKH,mBAAqB,CACxBlD,GAAAA,EACAmD,KAAAA,EACAT,QAASc,KAINA,EAOT,OAJAF,EAAKN,YAAYO,EAAU,SAC3BD,EAAKN,YAAYO,EAAU,WAC3BD,EAAKN,YAAYO,EAAU,UAEpBD,wKCpFX,MAAAQ,KAAAtF,EAAA,ihDAEqBuF,mPAAyBD,EAAA,wkBAgB1C,IAXME,EAAWC,EAAE3E,KAAK4E,KAAKC,SACrBC,EAAe9E,KAAK4E,KAAKG,OAAzBD,WAER9E,KAAKgF,eAAiB,EACtBhF,KAAKiF,cAAgB,GACrBN,EAAE,qDACCO,KAAKC,UAAUC,KAAKvG,EAAE,uBACtBwG,SAASX,GACNY,EAAYX,EAAE,uCACjBY,SADe,4BAAA9B,OACsBqB,IACrCO,SAASX,GACH3F,EAAI,EAAGA,GAAK+F,EAAY/F,GAAK,EACpCiB,KAAKiF,cAAclG,GAAK4F,EAAE,wBACvBY,SADqB,QAAA9B,OACJ1E,IACjByG,YAAY,WAAYxF,KAAKgF,iBAAmBjG,GAChDmG,KAAKnG,GACLsG,SAASC,qWAQHG,EAAQC,GAAuB,IAClCZ,EAAe9E,KAAK4E,KAAKG,OAAzBD,WAEJa,EAAe,KACfF,EAAOG,KAAK,SAACC,EAAM9G,GAAP,OACM,IAApB8G,EAAKC,YAAiD,IAA7BJ,EAAW3G,GAAG+G,YACvCH,EAAeI,KAAKC,IAAI,EAAGhG,KAAKgF,eAAiB,GACxCS,EAAOG,KAAK,SAACC,EAAM9G,GAAP,OACF,IAAnB8G,EAAKC,WAA+C,IAA5BJ,EAAW3G,GAAG+G,cACtCH,EAAeI,KAAKE,IAAInB,EAAY9E,KAAKgF,eAAiB,IAGxDW,GAAgBA,IAAiB3F,KAAKgF,iBACxChF,KAAKiF,cAAcjF,KAAKgF,gBAAgBkB,YAAY,YACpDlG,KAAKiF,cAAcU,GAAcJ,SAAS,YAC1CvF,KAAKgF,eAAiBW,GAIpBF,EACDG,KAAK,SAACC,EAAM9G,GAAP,OAAa8G,EAAKrF,SAAWkF,EAAW3G,GAAGyB,WACjDR,KAAK4E,KAAKuB,WAAanG,KAAKgF,eAC5BhF,KAAKoG,aAAa,gNCtDxB,IAAA5B,EAAA6B,EAAAnH,EAAA,gBACAoH,EAAAD,EAAAnH,EAAA,cACAqH,qaAAAC,CAAAtH,EAAA,yoDAEA,IAWMuH,EAAmB,IAkBJC,mPAAiBlC,EAAA,uCAEpC,SAAAkC,EAAY9B,GAAM,IAAAxD,+FAAArB,CAAAC,KAAA0G,GAChBtF,EAAAD,EAAA1B,KAAAO,KAAM4E,GACN,IAAM+B,EAAczG,MAhCC,KAgCuBC,KAAK,MAFjC,OAGhBiB,EAAKuF,YAAc,SAAA9H,GAAC,OAAI0H,EAAMK,OAAOD,EAAa9H,EAAG+F,EAAKiC,KAAKC,QAlCxC,KA+BP1F,qLAOQpB,KAAK4E,KAAKmC,cAAc,qCAAhD/G,KAAKgH,kBACLhH,KAAKgH,WAAWC,KAAK,CAAEC,SAAU,qBACClH,KAAK4E,KAAKmC,cAAc,gDAA1D/G,KAAKmH,4BACLnH,KAAKmH,qBAAqBF,KAAK,CAAEC,SAAU,sBACTlH,KAAK4E,KAAKmC,cAAc,0CAA1D/G,KAAKoH,4BACLpH,KAAKoH,qBAAqBH,KAAK,CAAEC,SAAU,6RAIdlH,KAAK4E,KAA1BiC,IAAAA,KAAMV,IAAAA,WAERkB,EAAYR,EAAKS,QACpB/B,SAAS,QACTA,SAAS,QACTgC,UAAU,EAlDM,KAqDnBvH,KAAKwH,QAAUtH,MAAMiG,GAClBhG,KAAK,MACLC,IAAI,SAACC,EAAGoH,GACP,IAAMC,GAAKD,EAAc,IAAMtB,EAAa,GACtCmB,EAAQD,EAAUC,QACxBA,EACG/B,SADH,UAAA9B,OACsBgE,IACnBE,UAAU,CAAEC,WAAYF,EAAIb,EAAKC,UAEpC,IAAMe,EAAOP,EAAMQ,IAAI/D,EAAKiD,YACzBe,OAAO,EA5DC,IA8DLC,EAAcV,EAAMA,QACpBW,EAAQD,EAAYV,QAC1BW,EAAMC,KAAK,GAAIrB,EAAKsB,SAAU,GAAG,GACjCF,EAAMG,OAtDK,IAsDcL,OAAO,EAAG,GACnCE,EAAMN,UAAU,CAAEU,WAAY5B,KAG9B,IAAM6B,EAAYN,EAAYO,KAAKC,GAAgB3B,EAAKsB,UACrDM,MAAK,GAtEG,IAyEX,OAFAT,EAAYU,SAASJ,GAEd,CACL5H,GAAI+G,EACJH,MAAOA,EACPO,KAAMA,EACNI,MAAOA,EACPP,EAAGA,EACHiB,OAAO,EACPC,SAAS,KAIf5I,KAAK6I,MAAQxB,EAAUC,QACpBwB,SAAS9I,KAAK2G,YAAY,IAC1BpB,SAAS,SAEZvF,KAAK+I,YAAc1B,EAAUC,QACvB0B,EAAiB,CAAEC,YApFA,IAqFnBC,GAAiB,EAAA5C,EAAA,SAtFC,GADD,IAuFiD0C,GAClEG,EAAgBD,EAAe9I,IAAI,SAACgJ,EAAGrK,GAAJ,MAAU,CACjD8H,EAAKC,SAAW/H,GAAKmK,EAAexJ,OAAS,IA1FtB,IA2FA0J,KAEzBpJ,KAAKkJ,eAAiBA,EACtBlJ,KAAKqJ,iBAAmBrJ,KAAKsJ,iBAC7BC,QAAQC,IAAI,qBAAsBxJ,KAAKqJ,kBAEjCI,EAAoBzJ,KAAK+I,YAAYzB,QACrCoC,EAAWD,EAAkBnC,QAChC/B,SAAS,YACToC,UAAU,CACTC,WAAY5H,KAAKqJ,iBAAiB3B,EAAIb,EAAKC,QAC3CuB,WAAY5B,EAtGS,IAsGUzG,KAAKqJ,iBAAiBM,IAEzD3J,KAAK4J,eAAiBF,EAAS5B,IAAI9H,KAAKmH,sBACxCnH,KAAK6J,eAAiBH,EAAS5B,IAAI9H,KAAKoH,sBAAsB0C,OAG9D9J,KAAK+J,OAAS/J,KAAK+I,YAAYD,SAASK,GACrC5D,SAAS,UACTgC,UAAU,EAAGd,GACbqD,OAEHL,EAAkBf,SAAS1I,KAAK+I,YAAYjB,IAAI9H,KAAK+J,SAErD/J,KAAKgK,WAAahK,KAAK+I,YAAYkB,OACnCjK,KAAK+I,YAAYL,SAAS1I,KAAKgK,YAE/BhK,KAAKkK,SAAW7C,EAAUC,QACvBC,UAAU,EAAGd,sWAOLhB,EAAQC,EAAYyE,GAAW,IAAAC,EAAApK,KAAAqK,EAEbrK,KAAK4E,KAApBuB,GAF4BkE,EAElCxD,KAFkCwD,EAE5BlE,YACdV,EACG6E,MAAM,EAAGnE,GACTvE,QAAQ,SAAC2I,EAAO9C,GACf,IAAM+C,EAASJ,EAAK5C,QAAQC,GAC5B,IAAK+C,EAAO5B,UACV4B,EAAO9C,GAAqByC,EAAQI,EAAMzE,UA/H/B,KAgIX0E,EAAO9C,EAAI3B,KAAKE,IAAIF,KAAKC,IApIN,GAoIgCwE,EAAO9C,GAAI,IAC9D8C,EAAO7B,MAA4B,IAApB4B,EAAMzE,UAAkB0E,EAAO7B,OAA6B,IAArB4B,EAAMzE,UACxDyE,EAAM/J,SAAWkF,EAAW+B,GAAajH,QAAQ,CAEnDgK,EAAO5B,SAAU,EAEjB,IAAM6B,EAAgBL,EAAKK,cAAcD,EAAO9C,GAC1CgD,EAAcjE,EA9IH,IA8I6CgE,EACxDE,EApIS,IAoI2ClE,EAApCiE,EAChBE,EAAaJ,EAAOvC,MACvB4C,QAAQF,EAAe,EAAG,OAC1BhD,UAAU,CAAEU,WAAYqC,IACxBI,MAAM,WAAA,OAAMV,EAAKW,cAAcP,EAAO9C,KACtCoD,MAAM,WAAA,OAAMV,EAAKY,WAAWR,KAC3BzE,KAAKkF,IAAIT,EAAO9C,EAAI0C,EAAKf,iBAAiB3B,IAAMwD,MAClDN,EACGE,MAAM,WAAA,OAAMV,EAAKe,kBACjBL,MAAM,WAAA,OAAMV,EAAKgB,qBAAqBZ,KAC1BI,EAAWC,QAAQF,EA7I5B,KA8ILhD,UAAU,CAAEU,WAAY5B,KACxBqE,MAAM,WAAA,OAAMN,EAAO5B,SAAU,IAChCW,QAAQC,IAAR,UAAA/F,OAAsBgE,EAAtB,mBAAoD,CAAEC,EAAG8C,EAAO9C,EAAGiC,EAAGc,oCAM3EN,EAAOkB,GAAI,IAAAC,EACetL,KAAK4E,KAA1BiC,EADMyE,EACNzE,KADMyE,EACAnF,WAKdnG,KAAK6I,MAAM0C,KAAKvL,KAAK2G,YAAY0E,EA5KT,MA8KxBrL,KAAKwH,QAAQ5F,QAAQ,SAAC4I,EAAQ/C,GAC5B,IAAMC,EAAI8C,EAAO9C,EACXiC,EAnLe,GAmLUpD,EAAM4B,OAAOT,EAAG2D,EAhLzB,KAiLhBG,EApLe,GAoLcjF,EAAMiF,MAAM9D,EAAG2D,EAjL5B,KAmLhBI,EAAgB,CACpBC,OAFY,GAAa3F,KAAK4F,MAAMH,EAAO3E,EAAKC,SAAWf,KAAK6F,IAI9DpB,EAAO7B,QACT8C,EAAcI,KAAO,KACvBrB,EAAO3C,KAAKF,UAAU8D,GACtBjB,EAAOlD,MAAMK,UAAU,CACrBC,WAAYF,EAAIb,EAAKC,QACrBuB,WAAYsB,4CAKJjC,GACZ,OAAO1H,KAAK8L,iBAAiBpE,GAAG9G,+CAGjB8G,GACf,IAAMqE,GAAY/L,KAAKkJ,eAAexJ,OAAS,GAAKgI,EAC9CsE,EAAWjG,KAAKkG,MAAMF,GACtBG,EAAKF,IAAahM,KAAKkJ,eAAexJ,OAAS,EAAIsM,EAAW,EAAIA,EAClEG,EAAKD,EAAK,EACVE,EAAKpM,KAAKkJ,eAAegD,GACzBG,EAAKrM,KAAKkJ,eAAeiD,GAE/B,MAAO,CACLvL,MAAOwL,GAFCL,EAAWG,IAEFG,EAAKD,GACtBZ,OAAQa,EAAKD,IAAOpM,KAAKkJ,eAAexJ,OAAS,6CAKnD,IAAe4M,EACTC,GADSD,EACctM,KAAKkJ,eADV,GAAGsD,OAAO/M,KAAK6M,EAAO,SAACG,EAAGxN,EAAGF,EAAG2N,GAAV,OAAkBzN,EAAIyN,EAAID,GAAK1N,EAAI0N,GAAG,IAEpF,MAAO,CACL/E,EAAG6E,GAAiBvM,KAAKkJ,eAAexJ,OAAS,GACjDiK,EAAG3J,KAAKkJ,eAAeqD,uCAIhB/B,GAAQ,IAEX1D,EADW9G,KAAK4E,KAAdiC,KACWC,QAFF6F,EAGQ3M,KAAK8L,iBAAiBtB,EAAO9C,GAA9C9G,EAHS+L,EAGT/L,MAAO4K,EAHEmB,EAGFnB,MACToB,EAAQ,IAAM7G,KAAK4F,MA3NA,IA2NMH,EAA8B1E,GAASf,KAAK6F,GAC3E5L,KAAKkK,SAAShC,KA9MK,KA8MCpB,EAAyB,EAAG,EA9M7B,IA8MgCA,EAAyB,EAAG,GAC5EvB,SADH,UAAA9B,OACsB+G,EAAO9J,KAC1BiH,UAAU,CACTC,WAAYd,EAAQ0D,EAAO9C,EAC3BW,WAhOqB,IAgOczH,EACnC8K,OAAQkB,0CAIAlF,GAAG,IACPb,EAAS7G,KAAK4E,KAAdiC,KACFgG,EAAIhG,EAAKC,QACTsC,EAAIvC,EAAKsB,SACTI,EAAOvI,KAAKgK,WACf8C,QAAQ,CAAC,EAAED,GAAIzD,GAAI,CAACyD,GAAIzD,GAAI,CAACyD,EAAGzD,GAAI,EAAEyD,EAAGzD,KACzCrB,OAAOlB,EAAKC,QAAUY,EAAG,GACzBC,UAAU,CAAEoF,OAAQ,OACvB/M,KAAKgK,WAAWxG,IAAI+E,wKAIZ1B,EAAS7G,KAAK4E,KAAdiC,KACR7G,KAAK+J,OAAOiD,OACchN,KAAKgK,WAAW5B,OAAO,IAAoBvB,EAAKC,SACvEiB,OACClB,EAAKC,QAAU9G,KAAKqJ,iBAAiB3B,EACrCjB,EAtPqB,IAsPqBzG,KAAKqJ,iBAAiBM,GAKlDsD,IAAG,KAA2BpG,EAAKC,SAE/CqE,EAAgB,SAAAlB,GAAI,OAAI,IAAIiD,QAAQ,SAAAC,GACxClD,EAAKY,QA5Oc,KA6OhBuC,KAAK,SAAAC,GAAG,QAAMtH,KAAKuH,KAAK,EAAKD,EAAMA,GAAQ,KAC3C1F,UAAU,CAAEoF,OAAQ,IACpBjC,MAAMqC,wBAEJD,QAAQK,IAAIvN,KAAKgK,WAAWwD,WAAWpN,IAAI+K,0KAGzBsC,mHACjB5G,EAAS7G,KAAK4E,KAAdiC,KACFnC,EAAWC,EAAE3E,KAAK4E,KAAKC,SAEvB6I,EAAQ,SAAAC,GAAE,OAAI,IAAIT,QAAQ,SAAAC,GAAO,OAAIS,WAAWT,EAASQ,MAEzDE,EAAuB1I,UAAUC,KAAKvG,EAAE,gCACzC4O,EAAO/M,GAAK,GACbyE,UAAUC,KAAKvG,EAAE,6BAEfiP,EADgB,SAAApB,GAAG,OAAIA,EAAI3G,KAAKkG,MAAMlG,KAAKgI,UAAYrB,EAAIhN,OAAS,KACnDsO,CAAc7I,UAAUC,KAAKvG,EAAE,cAEhDoP,EAAwBtJ,EAAE,SAASO,KAAK2I,GACxCK,EAAkBvJ,EAAE,SAASO,KAAK4I,GAAgBK,IAAI,aAAc,WACvEA,IAAI,aAAc,UAEfC,EAASzJ,EAAC,4CAAAlB,OAA6CgK,EAAO/M,GAApD,SACb2N,OAAO,CAACJ,EAAuBC,IAE5B5N,EAAO,IAAMN,KAAKqJ,iBAAiB3B,EACnC4G,EAAS,IAAM,IAA4CzH,EAAKsB,SAChEoG,EAAS5J,EAAE,iDACdwJ,IAAI,CAAE7N,KAAI,GAAAmD,OAAKnD,EAAL,KAAcgO,OAAM,GAAA7K,OAAK6K,EAAL,OAC9BD,OAAOD,aAEJV,EA5QoB,oBA6Q1BhJ,EAAS8J,QAAQH,OAAOE,aAElBb,EA9Q6B,aA+QnCQ,EAAgBC,IAAI,aAAc,WAClCnO,KAAK6J,eAAemD,OACpBhN,KAAK4J,eAAeE,qSC/SxB,IAAAtF,EAAA6B,EAAAnH,EAAA,gBACAuP,EAAApI,EAAAnH,EAAA,6iDAEqBwP,mPAAkBlK,EAAA,uWAEXxE,KAAK4E,KAAKmC,cAAc,sCAAhD/G,KAAK2O,kBACL3O,KAAK4O,KAAO5O,KAAK2O,WAAWE,QAAQ,qQAI5BhI,EAAS7G,KAAK4E,KAAdiC,MACFiI,EAAezL,SAASC,cAAc,QAC/BC,UAAUC,IAAI,WAAY,OAAQ,cAAe,gBAC9DsL,EAAaC,YAAc5J,UAAUC,KAAKvG,EAAE,kBAC5CmB,KAAK4E,KAAKC,QAAQwJ,OAAOS,GAEJjI,EAAKiB,IAAI9H,KAAK2O,YAChCK,KAAK,KAAM,KACXC,OAAO,CAAEC,MAAO,UAAWpI,MAAO,IAClC3G,KAAK,eACL4H,OAAO,IAAU,KAEP8C,QAAQ,CAAEsE,SAAU,MAAQF,OAAO,CAAEC,MAAO,YACzDlP,KAAKoP,UAAW,EAAAX,EAAA,SAAczO,KAAK2O,WAAY,CAAEQ,SAAU,OAE3DnP,KAAKqP,YAAc,oWAOR5J,EAAQC,GAEfD,EACDG,KAAK,SAACC,EAAM9G,GAAP,OAAa8G,EAAKrF,SAAWkF,EAAW3G,GAAGyB,UACjDR,KAAKoG,aAAa,qCAIjB+D,EAAOkB,GAEVrL,KAAKoP,SAASjF,EAAOkB,gMC1CzB,MAAAiE,KAAApQ,EAAA,2gBAOqBqQ,aAMnB,SAAAA,EAAY3K,gGAAM7E,CAAAC,KAAAuP,GAEhBvP,KAAK4E,KAAOA,EACZ5E,KAAKwP,OAAS,IAAIF,EAAA,8zBA4EPzL,GACX7D,KAAKwP,OAAOC,KAAK5L,oKC7FrB,IAAA6L,EAAArJ,EAAAnH,EAAA,qBACAyQ,EAAAtJ,EAAAnH,EAAA,sBACA0Q,EAAAvJ,EAAAnH,EAAA,2BACA2Q,EAAAxJ,EAAAnH,EAAA,uBACA4Q,EAAAzJ,EAAAnH,EAAA,sBACA6Q,EAAA1J,EAAAnH,EAAA,+iBAWqB8Q,aACnB,SAAAA,EAAYC,EAAWlL,gGAAQhF,CAAAC,KAAAgQ,GAC7BhQ,KAAKiQ,UAAYA,EACjBjQ,KAAK+E,OAASA,EAEd/E,KAAKyF,OAASzF,KAAKkQ,eACnBlQ,KAAKmQ,WAAanQ,KAAKkQ,eAEvBlQ,KAAKoQ,SAAW,KAChBpQ,KAAKqQ,UAAW,EAChBrQ,KAAKsQ,MAAQ,GACbtQ,KAAKuQ,YAAc,KAEnBvQ,KAAKwQ,SAAW,GAChBxQ,KAAKyQ,kBAAoB,KAEzBzQ,KAAKmG,WAAanG,KAAK+E,OAAOD,oMAU9B9E,KAAK6E,QAAUxB,SAASC,cAAc,OACtCtD,KAAK6E,QAAQtB,UAAUC,IAAI,YAErBkN,EAAgBrN,SAASC,cAAc,QAC/BC,UAAUC,IAAI,aAC5BxD,KAAKiQ,UAAU5B,OAAOqC,GAEtB1Q,KAAK2Q,OAASC,MAAMC,MAAMH,GAC1B1Q,KAAK2Q,OACFG,QAAQ,EAAG,EAVW,KAAM,KAW5B7J,KAAK,sBAAuB,iBAE/BjH,KAAK6G,KAAO7G,KAAK2Q,OAAOI,SAAS/B,KAbR,KAAM,KAe/BhP,KAAK6E,QAAUxB,SAASC,cAAc,OACtCtD,KAAK6E,QAAQtB,UAAUC,IAAI,WAC3BxD,KAAKiQ,UAAU5B,OAAOrO,KAAK6E,SAEvB7E,KAAK+E,OAAOiM,oBACdhR,KAAKwQ,SAASS,OAAS,IAAInB,EAAA,QAAe9P,KAAK+E,OAAOD,YACtD9E,KAAKiQ,UAAUvM,YAAY1D,KAAKwQ,SAASS,OAAO7N,UAG9CpD,KAAK+E,OAAOmM,cACdlR,KAAKwQ,SAASW,QAAU,IAAItB,EAAA,QAAgB7P,KAAK+E,OAAOD,aAEtD9E,KAAK+E,OAAOqM,sBACdpR,KAAKwQ,SAASa,SAAW,IAAItB,EAAA,QAAiB/P,KAAK+E,OAAOD,aAGxD9E,KAAK+E,OAAOuM,gBACdtR,KAAKyQ,kBAAoBpN,SAASC,cAAc,OAChDtD,KAAKyQ,kBAAkBlN,UAAUC,IAAI,cACrCxD,KAAKyQ,kBAAkBlN,UAAUC,IAAI,uBACrCxD,KAAKiQ,UAAUvM,YAAY1D,KAAKyQ,8BAG5BzQ,KAAKuR,aAAa,QAAS,IAAI5B,EAAA,QAAU3P,gCACzCA,KAAKuR,aAAa,aAAc,IAAI3B,EAAA,QAAiB5P,gCACrDA,KAAKuR,aAAa,OAAQ,IAAI7B,EAAA,QAAS1P,kBAEzCA,KAAK+E,OAAOyM,sBACdxR,KAAKyR,WAAW,OAAQ,OAAQ,kBAC1BzR,KAAK0R,QAAQ,+DAEnB1R,KAAKyR,WAAW,QAAS,OACE,EAAzBzR,KAAK+E,OAAOD,WAAiB,aAAe,QAC9C9E,KAAKyR,WAAW,aAAc,OAAQ,QACtCzR,KAAKyR,WAAW,OAAQ,OAAQ,mBAC1BzR,KAAK0R,QAAQ,wKAYHC,+GAAKC,8CACAC,MAAMF,cAAvBG,UACOC,OAAS,KAA0B,KAAnBD,EAASC,aAC9B,IAAI1S,MAAJ,0BAAAoE,OAAoCqO,EAASC,OAA7C,MAAAtO,OAAwDqO,EAASE,WAAjE,cAAAvO,OAAwFkO,EAAxF,wCAEU3R,KAAK2Q,OAAOsB,kBAAmBH,EAAS5M,iCAApDgN,OAAiCC,oBACnCP,GACFM,EAAUtM,KAAK,SAAShE,QAAQ,SAAAd,GAAC,OAAIA,EAAEgD,6BAGlCoO,mIASPlS,KAAKyF,OAASzF,KAAKkQ,sDAInB,OAAOhQ,MAAMF,KAAK+E,OAAOD,YACtB3E,KAAK,MACLC,IAAI,WAAA,MAAO,CAAE0F,UAAW,EAAGtF,QAAQ,0CAYtCR,KAAKmQ,WAAanQ,KAAKyF,OAEF,SAAf2M,EAAgBC,EAAUC,GAAX,MAAyB,CAC5CxM,UAAWwM,EAAS/R,MAAQ,EAAK+R,EAAShS,MAAQ,EAAI+R,EAASvM,UAC/DtF,OAAQ8R,EAAS9R,QAAU6R,EAAS7R,QAHtC,IAAMP,EAASc,OAAOwR,OAAOvS,KAAKwQ,UAAUpQ,IAAI,SAAAnB,GAAC,OAAIA,EAAEuT,cAKvDxS,KAAKyF,OAASzF,KAAKkQ,eAAe9P,IAChC,SAACmK,EAAOxL,GAAR,OAAckB,EAAOG,IAAI,SAAAU,GAAC,OAAIA,EAAE/B,KAAIyN,OAAO4F,EAAc7H,KAGvDvK,KAAKyQ,oBACPzQ,KAAKyQ,kBAAkB1B,YAAc/O,KAAKyF,OAAOrF,IAAI,SAACyF,EAAM9G,GAAP,MAAA,IAAA0E,OAC/C1E,EAD+C,QAAA0E,OACvCoC,EAAKC,UADkC,OAAArC,OACnBoC,EAAKrF,OAAS,IAAM,OACnDiS,KAAK,uCAON,IAAArR,EAAApB,KACJ,IAAKA,KAAKoQ,SAAU,CAClB,IAAIsC,EAAS,EACTC,EAAM,EAGV3S,KAAKoQ,SAAW,SAAC/E,GACf,IAAKjK,EAAKiP,SAAU,CAClBjP,EAAKwR,aAGL,IAAMzI,GADNkB,GADAsH,GAAO5M,KAAKC,IAAI,EAAIqF,EAAKsH,EAAOD,EALlB,MAOKA,EACnBtR,EAAKmP,YAAYsC,aAAazR,EAAKqE,OAAQrE,EAAK+O,WAAYhG,EAAOkB,GACnEjK,EAAKmP,YAAY1J,KAAKsD,EAAOkB,GAC7BqH,EAASrH,EAETpI,OAAO6P,sBAAsB1R,EAAKgP,YAIxCnN,OAAO6P,sBAAsB9S,KAAKoQ,0CASlCpQ,KAAKqQ,UAAW,mCASZrQ,KAAKqQ,WACPrQ,KAAKqQ,UAAW,EAChBrQ,KAAK+S,2EAcUrS,EAAIsS,yFACrBhT,KAAKsQ,MAAM5P,GAAMsS,WACXA,EAAKC,2KAUCC,qFACZlT,KAAKmT,QAEDnT,KAAKuQ,4BACDvQ,KAAKuQ,YAAY6C,+CAEEC,IAAvBrT,KAAKsQ,MAAM4C,SACP,IAAI7T,MAAJ,gCAAAoE,OAA0CyP,iCAElDlT,KAAKuQ,YAAcvQ,KAAKsQ,MAAM4C,GAC9BlT,KAAK6G,KAAKyM,QACVtT,KAAK6E,QAAQ0O,UAAY,aACnBvT,KAAKuQ,YAAYiD,0BAEvBxT,KAAKyT,uIAGIC,EAAQC,OAA2C,IAAA5P,EAAA/D,KAApC4T,EAAoC,EAAAC,UAAAnU,aAAA2T,QAAvB,KAAMS,EAAiB,EAAAD,UAAAnU,aAAA2T,QAAN,KACtD,QAA2BA,IAAvBrT,KAAKsQ,MAAMoD,GACb,MAAM,IAAIrU,MAAJ,mDAAAoE,OAA6DiQ,EAA7D,MAER,GAAIE,QAAyCP,IAA3BrT,KAAKsQ,MAAMsD,GAC3B,MAAM,IAAIvU,MAAJ,iDAAAoE,OAA2DmQ,EAA3D,MAER5T,KAAKsQ,MAAMoD,GAAQlE,OAAOuE,GAAGJ,EAAO,WAClC,GAAI5P,EAAKwM,cAAgBxM,EAAKuM,MAAMoD,GAClC,MAAM,IAAIrU,MAAJ,QAAAoE,OAAkBiQ,EAAlB,yBAAAjQ,OAAgDkQ,EAAhD,qDAEW,OAAfC,GACF7P,EAAK2N,QAAQkC,GAEXE,GAAgC,mBAAbA,GACrBA,uOClQR,MAAAE,KAAA9U,EAAA,iWAEA,IA8BC+U,EA9BKC,EAAgB,CACpBC,gBAAiB,KACjBjD,aAAa,EACbF,mBAAmB,EACnBlM,WAAY,EACZ0M,gBAAgB,EAChBF,eAAe,YASF8C,mFAAf,SAAAC,EAA0B1C,GAA1B,IAAAG,EAAA,OAAAwC,mBAAAC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACyB7C,MAAMF,GAD/B,KAAA,EAAA,GAEyB,MADjBG,EADR0C,EAAAG,MAEe5C,QAAiBD,EAASC,OAAS,IAFlD,OAAAyC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAImB5C,EAAS8C,OAJ5BJ,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAF,EAAAK,OAAA,SAAAL,EAAAG,MAAA,KAAA,GAAA,MAAAH,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,MAAA,GAMY,IAAInV,MAAJ,8BAAAoE,OAAwC+Q,EAAAM,GAAEC,UANtD,KAAA,GAAA,MASQ,IAAI1V,MAAJ,0BAAAoE,OAAoCqO,EAASC,OAA7C,MAAAtO,OAAwDqO,EAASE,WAAjE,2BATR,KAAA,GAAA,IAAA,MAAA,OAAAwC,EAAAQ,SAAAX,EAAA,KAAA,CAAA,CAAA,EAAA,gCAeCJ,EAAAgB,EAAAX,mBAAAY,KAAA,SAAAC,IAAA,IAAApQ,EAAAH,EAAA,OAAA0P,mBAAAC,KAAA,SAAAa,GAAA,OAAA,OAAAA,EAAAX,KAAAW,EAAAV,MAAA,KAAA,EAAA,OAAAU,EAAAX,KAAA,EAAAW,EAAAN,GAEkB/T,OAFlBqU,EAAAC,GAEgC,GAFhCD,EAAAE,GAEoCpB,EAFpCkB,EAAAV,KAAA,EAEyDN,EAAW,iBAFpE,KAAA,EAAA,OAAAgB,EAAAG,GAAAH,EAAAT,KAES5P,EAFTqQ,EAAAN,GAEyB9T,OAFzBvB,KAAA2V,EAAAN,GAAAM,EAAAC,GAAAD,EAAAE,GAAAF,EAAAG,IAAAH,EAAAV,KAAA,GAGSvP,UAAUC,KAAKoQ,KAAK,CACxBC,oBAAqB,OACrBC,sBAAuB,KACvBvB,gBAAiBpP,EAAOoP,iBAAmB,OANhD,KAAA,GAAA,OASSvP,EAAO,IAAIoP,EAAA,QACf3Q,SAASsS,cAAc,SACvB5Q,GAEF9B,OAAO2B,KAAOA,EAbjBwQ,EAAAV,KAAA,GAcS9P,EAAK4Q,OAdd,KAAA,GAAAJ,EAAAV,KAAA,GAAA,MAAA,KAAA,GAAAU,EAAAX,KAAA,GAAAW,EAAAQ,GAAAR,EAAA,MAAA,GAiBG7L,QAAQsM,MAART,EAAAQ,IAjBH,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAJ,SAAAG,EAAA,KAAA,CAAA,CAAA,EAAA,SAAA,WAAAlB,EAAA6B,MAAA9V,KAAA6T,WAAA,qjCCgEc,SAAiBkC,EAAYrW,GAAsB,IAAdsW,EAAc,EAAAnC,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAJ,GAU5D,OATAmC,EAAUjV,OAAOC,OAAO,GAAIiV,EAAgBD,GA1B9C,SAAgCpP,EAAQsP,GAMtC,IALA,IAAM5V,EAAOsG,EAAO,GAAG,GAEjBE,EADQF,EAAOA,EAAOlH,OAAS,GAAG,GAClBY,EAChB6V,EAAUjW,MAAMgW,GAClBE,EAAI,EACCrX,EAAI,EAAGA,EAAIoX,EAAQzW,OAAS,IAAKX,EAAG,CAC3C,KAAOA,IAAMmX,EAAa,IAAMtP,EAAOwP,GAAG,GAAK9V,GAAQwG,KACnDsP,EAEJ,IAAMvX,GAAKyB,EAASvB,GAAKmX,EAAa,GAAMpP,EAAUF,EAAOwP,EAAI,GAAG,KAC/DxP,EAAOwP,GAAG,GAAKxP,EAAOwP,EAAI,GAAG,IAClCD,EAAQpX,GAAK6H,EAAOwP,EAAI,GAAG,IAAMxP,EAAOwP,GAAG,GAAKxP,EAAOwP,EAAI,GAAG,IAAMvX,EAGtE,OADAsX,EAAQA,EAAQzW,OAAS,GAAKkH,EAAOA,EAAOlH,OAAS,GAAG,GACjDyW,EAmBsBE,CA1G/B,SAASC,EAAc5J,EAAK6J,GAAkB,IAAbC,IAAa,EAAA3C,UAAAnU,aAAA2T,IAAAQ,UAAA,KAAAA,UAAA,GAC5C,GAAY,IAAR0C,EACF,OAAO7J,EAET,IAAM+J,EAAI/J,EAAIhN,OACd,IAAMgX,EAAShK,EAAItM,IAAI,SAACnB,EAAGF,GAAJ,MAAU,CAC/B,CAAC,IAAOE,EAAE,GAAK,IAAOyN,GAAK3N,EAAI,GAAK0X,GAAG,GAAI,IAAOxX,EAAE,GAAK,IAAOyN,GAAK3N,EAAI,GAAK0X,GAAG,IACjF,CAAC,IAAOxX,EAAE,GAAK,IAAOyN,GAAK3N,EAAI,GAAK0X,GAAG,GAAI,IAAOxX,EAAE,GAAK,IAAOyN,GAAK3N,EAAI,GAAK0X,GAAG,OAChFE,OAECH,MACFE,EAAOhX,OACPgX,EAAO,GAAKhK,EAAI,GAChBgK,EAAOA,EAAOhX,OAAS,GAAKgN,EAAIA,EAAIhN,OAAS,IAG/C,OAAO4W,EAAcI,EAAQH,EAAM,EAAGC,GAyFVF,CAnE9B,SAA+BM,GAAiE,IAAtD3N,EAAsD,EAAA4K,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAxC,GAAKgD,EAAmC,EAAAhD,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAApB,GAAKiD,EAAe,EAAAjD,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAN,IAClFsC,EAAU,IAAIY,aAAaH,GAC3BI,EAAgB,CACpBjR,KAAKkG,MAAMhD,EAAc2N,GACzB7Q,KAAKkG,MAAMhD,GAAe,EAAI,EAAIA,GAAe2N,IAE7CK,EAAoB,CACxB,CAAC,EAAGlR,KAAKgI,SAAW8I,GACpB,CAACG,EAAc,GAAIH,GACnB,CAACG,EAAc,GAAK,EAAIjR,KAAKkG,MAAMlG,KAAKgI,UAAYiJ,EAAc,GAAKA,EAAc,KACpF,GACD,CAACA,EAAc,GAAIH,GACnB,CAACD,EAAY,EAAG7Q,KAAKgI,SAAW8I,IAGlB,EAAZD,IACFK,EAAkBrV,QAAQ,SAAAsV,GAAA,IAAAC,EAAAC,EAAAF,EAAA,GAAEnY,EAAFoY,EAAA,GAAK/N,EAAL+N,EAAA,GAAA,OAAYhB,EAAQpX,GAAKqK,IACnD6N,EAAkBzK,OAAO,SAAA6K,EAAAC,GAAwB,IAAAC,EAAAH,EAAAC,EAAA,GAAtBnL,EAAsBqL,EAAA,GAAlBnL,EAAkBmL,EAAA,GAAAC,EAAAJ,EAAAE,EAAA,GAAZnL,EAAYqL,EAAA,GAARnL,EAAQmL,EAAA,GAE/C,OA/BN,SAASC,EAA4BtB,EAASuB,EAAYC,GACxD,GAAqB,EAAjBxB,EAAQzW,OAAY,CAAA,IAAAkY,GARPlY,EASqByW,EAAQzW,OATrBgY,EAS6BA,EATjBC,EAS6BA,EAR3D,CACLhW,MAAOoE,KAAKkG,MAAMvM,EAASqG,KAAKgI,UAChC5F,OAAQpC,KAAKC,IAAI0R,EAAYC,GAAe5R,KAAKgI,WAMzCpM,EADciW,EACdjW,MAAOwG,EADOyP,EACPzP,OACfgO,EAAQxU,GAASwG,EACjBsP,EAA4BtB,EAAQ0B,SAAS,EAAGlW,GAAQ+V,EAAYvP,GACpEsP,EAA4BtB,EAAQ0B,SAASlW,EAAQ,EAAGwU,EAAQzW,QAC9DyI,EACAwP,GAdN,IAAmBjY,EAAQgY,EAAYC,EAgBrC,OAAOxB,EAqBHsB,CAA4BtB,EAAQ0B,SAAS3L,EAAK,EAAGC,GAAKC,EAAIC,GACvD,CAACF,EAAIE,MAOhB,OAFAyK,EAAS/Q,KAAKC,IAAI,EAAKD,KAAKE,IAAI6Q,EAAQ,IAEjC,IAAI5W,MAAMiW,EAAQzW,QACtBS,KAAK,MACLC,IAAI,SAACC,EAAGtB,GAAJ,MAAU,EACZA,EAAI+X,GAAU/Q,KAAKgI,SAAW,MAASoI,EAAQzW,OAAS,GACzDyW,EAAQpX,MA+Be+Y,CACzB/B,EACAC,EAAQ/M,YACR+M,EAAQa,aACRb,EAAQc,QAEoDd,EAAQ+B,WACGrY,IAhB3E,IAAMuW,EAAiB,CACrBhN,YAAa,GACb4N,aAAc,GACdC,OAAQ,IACRiB,UAAW,6GC9EN,SAAerQ,EAAG7I,GAEvB,OADAA,EAAKA,EAAImZ,EAAUA,GAEjB,IAAMjS,KAAKkS,IAAI,IAAMvQ,EAAI7I,GACvB,GAAKkH,KAAKkS,IAAI,GAAKvQ,EAAI7I,GACvB,GAAKkH,KAAKkS,IAAI,GAAKvQ,EAAI,EAAI7I,GAC3B,GAAKkH,KAAKkS,IAAI,GAAKvQ,EAAI,EAAI7I,IAC3B,aAGC,SAAiB6N,EAAK7N,GAE3B,OADA6N,EAAI9K,QAAQ,SAACvB,EAAGtB,GAAJ,OAAU2N,EAAI3N,GAAKoJ,EAAOpJ,GAAK2N,EAAIhN,OAAS,GAAIb,KACrD6N,YAGF,SAAgBA,EAAK7N,GAA+B,IAA5BqZ,EAA4B,EAAArE,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAnB,EAAKsE,EAAc,EAAAtE,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAL,EAKpD,OAJAnH,EAAI9K,QAAQ,SAACvB,EAAGtB,GACd,IAAM2I,EAAI3I,GAAK2N,EAAIhN,OAAS,GAC5BgN,EAAI3N,GAAK,CAACmZ,EAASxQ,EAAGyQ,EAAShQ,EAAOT,EAAG7I,MAEpC6N,GAhCT,IAAMsL,EAAS,GAAKjS,KAAK6F,GAElB,SAASzD,EAAOT,EAAG7I,GAExB,OADAA,EAAKA,EAAImZ,EAAUA,GAEjBjS,KAAKqS,IAAQ,IAAJ1Q,EAAU7I,GACjBkH,KAAKqS,IAAQ,GAAJ1Q,EAAa7I,GACtBkH,KAAKqS,IAAQ,GAAJ1Q,EAAS,EAAI7I,GACtBkH,KAAKqS,IAAQ,GAAJ1Q,EAAS,EAAI7I,IACtB,iiCCUS,SAAuBwZ,GAAyB,IAAlBC,EAAkB,EAAAzE,UAAAnU,aAAA2T,IAAAQ,UAAA,GAAAA,UAAA,GAAJ,GAOnDmC,EAAUjV,OAAOC,OAAO,GANP,CACrBuX,WAAY,GACZpJ,SAAU,IACVqJ,OAAQ,GAGwCF,GAC5CG,EAAWJ,EAAMzS,KAAK,WACtB8S,EAAgBD,EAASrY,IAAI,SAAAb,GAAC,OAAIA,EAAEgM,SACpCoN,EAAO5S,KAAKC,IAAL8P,MAAA/P,2VAAI1E,CAAQqX,EAAc/B,OAAOvW,IAAI,SAAA8W,GAAA,OAAAE,EAAAF,EAAA,GAAA,OAE9C0B,EAAU,EAEd,OAAO,SAACzO,EAAOkB,GACb,KAAIuN,EAAU5C,EAAQ7G,UAAtB,CAGAyJ,GAAWzO,EACX,IAAM0O,EAAW9S,KAAKE,IAAI2S,EAAS5C,EAAQ7G,UAAY6G,EAAQ7G,SAC/DsJ,EAAS7W,QAAQ,SAACrC,EAAGR,GACnBQ,EAAEgM,KAAKmN,EAAc3Z,GAAGqB,IAAI,SAAAiX,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAE3P,EAAF4P,EAAA,GAAK3N,EAAL2N,EAAA,GAAA,MAC1B,CACE5P,EAAI3B,KAAKqS,KAAKzO,EAAIgP,EAAOE,EAAW7C,EAAQwC,QAAUzS,KAAK6F,GAAK,GAC9DoK,EAAQuC,YAAc,EAAAxS,KAAA+S,IAAKD,EAAY,IACzClP,oCC3BV,IAAAoP,EAAAhY,OAAAiY,QAoeA,SAAAC,GACA,SAAAC,KAEA,OADAA,EAAA9W,UAAA6W,EACA,IAAAC,GAteAC,EAAApY,OAAAqY,MAweA,SAAAC,GACA,IAAAD,EAAA,GACA,IAAA,IAAAE,KAAAD,EAAAtY,OAAAqB,UAAAmX,eAAA9Z,KAAA4Z,EAAAC,IACAF,EAAAI,KAAAF,GAEA,OAAAA,GA5eAG,EAAAC,SAAAtX,UAAAqX,MA8eA,SAAAE,GACA,IAAAC,EAAA5Z,KACA,OAAA,WACA,OAAA4Z,EAAA9D,MAAA6D,EAAA9F,aA/eA,SAAAgG,IACA7Z,KAAAsP,SAAAvO,OAAAqB,UAAAmX,eAAA9Z,KAAAO,KAAA,aACAA,KAAAsP,QAAAyJ,EAAA,MACA/Y,KAAA8Z,aAAA,GAGA9Z,KAAA+Z,cAAA/Z,KAAA+Z,oBAAA1G,IAEAzT,EAAAJ,QAAAqa,GAGAA,aAAAA,GAEAzX,UAAAkN,aAAA+D,EACAwG,EAAAzX,UAAA2X,mBAAA1G,EAIA,IAEA2G,EAFAC,EAAA,GAGA,IACA,IAAAnb,EAAA,GACAiC,OAAAmZ,gBAAAnZ,OAAAmZ,eAAApb,EAAA,IAAA,CAAA8B,MAAA,IACAoZ,EAAA,IAAAlb,EAAA4I,EACA,MAAAyS,GAAAH,GAAA,EA4BA,SAAAI,EAAAC,GACA,YAAAhH,IAAAgH,EAAAN,cACAF,EAAAI,oBACAI,EAAAN,cAyHA,SAAAO,EAAAC,EAAAvX,EAAAwX,EAAAC,GACA,IAAAhO,EACA+C,EACAkL,EAEA,GAAA,mBAAAF,EACA,MAAA,IAAAG,UAAA,0CAoBA,IAlBAnL,EAAA+K,EAAAjL,UAOAE,EAAAoL,cACAL,EAAA9K,KAAA,cAAAzM,EACAwX,EAAAA,SAAAA,EAAAA,SAAAA,GAIAhL,EAAA+K,EAAAjL,SAEAoL,EAAAlL,EAAAxM,KAbAwM,EAAA+K,EAAAjL,QAAAyJ,EAAA,MACAwB,EAAAT,aAAA,GAeAY,GAmBA,GAdA,mBAAAA,EAEAA,EAAAlL,EAAAxM,GACAyX,EAAA,CAAAD,EAAAE,GAAA,CAAAA,EAAAF,GAGAC,EACAC,EAAAG,QAAAL,GAEAE,EAAAlB,KAAAgB,IAKAE,EAAAI,SACArO,EAAA2N,EAAAG,KACA,EAAA9N,GAAAiO,EAAAhb,OAAA+M,EAAA,CACAiO,EAAAI,QAAA,EACA,IAAAjO,EAAA,IAAAxN,MAAA,+CACAqb,EAAAhb,OAAA,KAAAqb,OAAA/X,GAAA,uEAGA6J,EAAAhJ,KAAA,8BACAgJ,EAAAmO,QAAAT,EACA1N,EAAA7J,KAAAA,EACA6J,EAAA/M,MAAA4a,EAAAhb,OACA,iBAAA6J,SAAAA,QAAA0R,MACA1R,QAAA0R,KAAA,SAAApO,EAAAhJ,KAAAgJ,EAAAkI,eA9BA2F,EAAAlL,EAAAxM,GAAAwX,IACAD,EAAAT,aAmCA,OAAAS,EAcA,SAAAW,IACA,IAAAlb,KAAAmb,MAGA,OAFAnb,KAAAua,OAAAa,eAAApb,KAAAgD,KAAAhD,KAAAqb,QACArb,KAAAmb,OAAA,EACAtH,UAAAnU,QACA,KAAA,EACA,OAAAM,KAAAwa,SAAA/a,KAAAO,KAAAua,QACA,KAAA,EACA,OAAAva,KAAAwa,SAAA/a,KAAAO,KAAAua,OAAA1G,UAAA,IACA,KAAA,EACA,OAAA7T,KAAAwa,SAAA/a,KAAAO,KAAAua,OAAA1G,UAAA,GAAAA,UAAA,IACA,KAAA,EACA,OAAA7T,KAAAwa,SAAA/a,KAAAO,KAAAua,OAAA1G,UAAA,GAAAA,UAAA,GACAA,UAAA,IACA,QAEA,IADA,IAAAyH,EAAA,IAAApb,MAAA2T,UAAAnU,QACAX,EAAA,EAAAA,EAAAuc,EAAA5b,SAAAX,EACAuc,EAAAvc,GAAA8U,UAAA9U,GACAiB,KAAAwa,SAAA1E,MAAA9V,KAAAua,OAAAe,IAKA,SAAAC,EAAAhB,EAAAvX,EAAAwX,GACA,IAAAgB,EAAA,CAAAL,OAAA,EAAAE,YAAAhI,EAAAkH,OAAAA,EAAAvX,KAAAA,EAAAwX,SAAAA,GACAiB,EAAAhC,EAAAha,KAAAyb,EAAAM,GAGA,OAFAC,EAAAjB,SAAAA,EACAgB,EAAAH,OAAAI,EA2HA,SAAAC,EAAAnB,EAAAvX,EAAA2Y,GACA,IAAAnM,EAAA+K,EAAAjL,QAEA,IAAAE,EACA,MAAA,GAEA,IAAAoM,EAAApM,EAAAxM,GACA,OAAA4Y,EAGA,mBAAAA,EACAD,EAAA,CAAAC,EAAApB,UAAAoB,GAAA,CAAAA,GAEAD,EAsDA,SAAAjP,GAEA,IADA,IAAAmP,EAAA,IAAA3b,MAAAwM,EAAAhN,QACAX,EAAA,EAAAA,EAAA8c,EAAAnc,SAAAX,EACA8c,EAAA9c,GAAA2N,EAAA3N,GAAAyb,UAAA9N,EAAA3N,GAEA,OAAA8c,EA3DAC,CAAAF,GAAAG,EAAAH,EAAAA,EAAAlc,QALA,GAyBA,SAAAsc,EAAAhZ,GACA,IAAAwM,EAAAxP,KAAAsP,QAEA,GAAAE,EAAA,CACA,IAAAoM,EAAApM,EAAAxM,GAEA,GAAA,mBAAA4Y,EACA,OAAA,EACA,GAAAA,EACA,OAAAA,EAAAlc,OAIA,OAAA,EAcA,SAAAqc,EAAArP,EAAA9N,GAEA,IADA,IAAAqd,EAAA,IAAA/b,MAAAtB,GACAG,EAAA,EAAAA,EAAAH,IAAAG,EACAkd,EAAAld,GAAA2N,EAAA3N,GACA,OAAAkd,EA3bAjC,EACAjZ,OAAAmZ,eAAAL,EAAA,sBAAA,CACAqC,YAAA,EACAC,IAAA,WACA,OAAAlC,GAEAmC,IAAA,SAAAC,GAGA,GAAA,iBAAAA,GAAAA,EAAA,GAAAA,GAAAA,EACA,MAAA,IAAA1B,UAAA,mDACAV,EAAAoC,KAIAxC,EAAAI,oBAAAA,EAKAJ,EAAAzX,UAAAka,gBAAA,SAAA1d,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAA2d,MAAA3d,GACA,MAAA,IAAA+b,UAAA,0CAEA,OADA3a,KAAA+Z,cAAAnb,EACAoB,MASA6Z,EAAAzX,UAAAoa,gBAAA,WACA,OAAApC,EAAApa,OA4DA6Z,EAAAzX,UAAAqN,KAAA,SAAAzM,EAAA,EAAA,EAAA,GACA,IAAAyZ,EAAAC,EAAAC,EAAArB,EAAAvc,EAAAyQ,EACAoN,EAAA,UAAA5Z,EAGA,GADAwM,EAAAxP,KAAAsP,QAEAsN,EAAAA,GAAA,MAAApN,EAAAqG,WACA,IAAA+G,EACA,OAAA,EAGA,GAAAA,EAAA,CAGA,GAFA,EAAA/I,UAAAnU,SACA+c,EAbA,GAcAA,aAAApd,MACA,MAAAod,EAGA,IAAAtC,EAAA,IAAA9a,MAAA,6BAAAod,EAAA,KAEA,MADAtC,EAAAR,QAAA8C,EACAtC,EAOA,KAFAuC,EAAAlN,EAAAxM,IAGA,OAAA,EAEA,IAAA6Z,EAAA,mBAAAH,EAEA,OADAC,EAAA9I,UAAAnU,QAGA,KAAA,GAtFA,SAAAgd,EAAAG,EAAAC,GACA,GAAAD,EACAH,EAAAjd,KAAAqd,QAIA,IAFA,IAAAH,EAAAD,EAAAhd,OACAqd,EAAAhB,EAAAW,EAAAC,GACA5d,EAAA,EAAAA,EAAA4d,IAAA5d,EACAge,EAAAhe,GAAAU,KAAAqd,GAgFAE,CAAAN,EAAAG,EAAA7c,MACA,MACA,KAAA,GA/EA,SAAA0c,EAAAG,EAAAC,EAAAG,GACA,GAAAJ,EACAH,EAAAjd,KAAAqd,EAAAG,QAIA,IAFA,IAAAN,EAAAD,EAAAhd,OACAqd,EAAAhB,EAAAW,EAAAC,GACA5d,EAAA,EAAAA,EAAA4d,IAAA5d,EACAge,EAAAhe,GAAAU,KAAAqd,EAAAG,GAyEAC,CAAAR,EAAAG,EAAA7c,KAtCA,GAuCA,MACA,KAAA,GAxEA,SAAA0c,EAAAG,EAAAC,EAAAG,EAAAE,GACA,GAAAN,EACAH,EAAAjd,KAAAqd,EAAAG,EAAAE,QAIA,IAFA,IAAAR,EAAAD,EAAAhd,OACAqd,EAAAhB,EAAAW,EAAAC,GACA5d,EAAA,EAAAA,EAAA4d,IAAA5d,EACAge,EAAAhe,GAAAU,KAAAqd,EAAAG,EAAAE,GAkEAC,CAAAV,EAAAG,EAAA7c,KAzCA,EAAA,GA0CA,MACA,KAAA,GAjEA,SAAA0c,EAAAG,EAAAC,EAAAG,EAAAE,EAAAE,GACA,GAAAR,EACAH,EAAAjd,KAAAqd,EAAAG,EAAAE,EAAAE,QAIA,IAFA,IAAAV,EAAAD,EAAAhd,OACAqd,EAAAhB,EAAAW,EAAAC,GACA5d,EAAA,EAAAA,EAAA4d,IAAA5d,EACAge,EAAAhe,GAAAU,KAAAqd,EAAAG,EAAAE,EAAAE,GA2DAC,CAAAZ,EAAAG,EAAA7c,KA5CA,EAAA,EAAA,GA6CA,MAEA,QAEA,IADAsb,EAAA,IAAApb,MAAAyc,EAAA,GACA5d,EAAA,EAAAA,EAAA4d,EAAA5d,IACAuc,EAAAvc,EAAA,GAAA8U,UAAA9U,IA7DA,SAAA2d,EAAAG,EAAAC,EAAAxB,GACA,GAAAuB,EACAH,EAAA5G,MAAAgH,EAAAxB,QAIA,IAFA,IAAAqB,EAAAD,EAAAhd,OACAqd,EAAAhB,EAAAW,EAAAC,GACA5d,EAAA,EAAAA,EAAA4d,IAAA5d,EACAge,EAAAhe,GAAA+W,MAAAgH,EAAAxB,GAuDAiC,CAAAb,EAAAG,EAAA7c,KAAAsb,GAGA,OAAA,GA0EAzB,EAAAzX,UAAA2R,GAJA8F,EAAAzX,UAAAob,YAAA,SAAAxa,EAAAwX,GACA,OAAAF,EAAAta,KAAAgD,EAAAwX,GAAA,IAKAX,EAAAzX,UAAAqb,gBACA,SAAAza,EAAAwX,GACA,OAAAF,EAAAta,KAAAgD,EAAAwX,GAAA,IAkCAX,EAAAzX,UAAAsb,KAAA,SAAA1a,EAAAwX,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAG,UAAA,0CAEA,OADA3a,KAAA+T,GAAA/Q,EAAAuY,EAAAvb,KAAAgD,EAAAwX,IACAxa,MAGA6Z,EAAAzX,UAAAub,oBACA,SAAA3a,EAAAwX,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAG,UAAA,0CAEA,OADA3a,KAAAyd,gBAAAza,EAAAuY,EAAAvb,KAAAgD,EAAAwX,IACAxa,MAIA6Z,EAAAzX,UAAAgZ,eACA,SAAApY,EAAAwX,GACA,IAAAoD,EAAApO,EAAAqO,EAAA9e,EAAA+e,EAEA,GAAA,mBAAAtD,EACA,MAAA,IAAAG,UAAA,0CAGA,KADAnL,EAAAxP,KAAAsP,SAEA,OAAAtP,KAGA,KADA4d,EAAApO,EAAAxM,IAEA,OAAAhD,KAEA,GAAA4d,IAAApD,GAAAoD,EAAApD,WAAAA,EACA,KAAAxa,KAAA8Z,aACA9Z,KAAAsP,QAAAyJ,EAAA,cAEAvJ,EAAAxM,GACAwM,EAAA4L,gBACApb,KAAAyP,KAAA,iBAAAzM,EAAA4a,EAAApD,UAAAA,SAEA,GAAA,mBAAAoD,EAAA,CAGA,IAFAC,GAAA,EAEA9e,EAAA6e,EAAAle,OAAA,EAAA,GAAAX,EAAAA,IACA,GAAA6e,EAAA7e,KAAAyb,GAAAoD,EAAA7e,GAAAyb,WAAAA,EAAA,CACAsD,EAAAF,EAAA7e,GAAAyb,SACAqD,EAAA9e,EACA,MAIA,GAAA8e,EAAA,EACA,OAAA7d,KAEA,IAAA6d,EACAD,EAAAG,QAuHA,SAAAH,EAAAjc,GACA,IAAA,IAAA5C,EAAA4C,EAAA2X,EAAAva,EAAA,EAAAH,EAAAgf,EAAAle,OAAA4Z,EAAA1a,EAAAG,GAAA,EAAAua,GAAA,EACAsE,EAAA7e,GAAA6e,EAAAtE,GACAsE,EAAAI,MAxHAC,CAAAL,EAAAC,GAEA,IAAAD,EAAAle,SACA8P,EAAAxM,GAAA4a,EAAA,IAEApO,EAAA4L,gBACApb,KAAAyP,KAAA,iBAAAzM,EAAA8a,GAAAtD,GAGA,OAAAxa,MAGA6Z,EAAAzX,UAAA8b,mBACA,SAAAlb,GACA,IAAA+Z,EAAAvN,EAAAzQ,EAGA,KADAyQ,EAAAxP,KAAAsP,SAEA,OAAAtP,KAGA,IAAAwP,EAAA4L,eAUA,OATA,IAAAvH,UAAAnU,QACAM,KAAAsP,QAAAyJ,EAAA,MACA/Y,KAAA8Z,aAAA,GACAtK,EAAAxM,KACA,KAAAhD,KAAA8Z,aACA9Z,KAAAsP,QAAAyJ,EAAA,aAEAvJ,EAAAxM,IAEAhD,KAIA,GAAA,IAAA6T,UAAAnU,OAAA,CACA,IACAiB,EADAyY,EAAAD,EAAA3J,GAEA,IAAAzQ,EAAA,EAAAA,EAAAqa,EAAA1Z,SAAAX,EAEA,oBADA4B,EAAAyY,EAAAra,KAEAiB,KAAAke,mBAAAvd,GAKA,OAHAX,KAAAke,mBAAA,kBACAle,KAAAsP,QAAAyJ,EAAA,MACA/Y,KAAA8Z,aAAA,EACA9Z,KAKA,GAAA,mBAFA+c,EAAAvN,EAAAxM,IAGAhD,KAAAob,eAAApY,EAAA+Z,QACA,GAAAA,EAEA,IAAAhe,EAAAge,EAAArd,OAAA,EAAA,GAAAX,EAAAA,IACAiB,KAAAob,eAAApY,EAAA+Z,EAAAhe,IAIA,OAAAiB,MAmBA6Z,EAAAzX,UAAA2a,UAAA,SAAA/Z,GACA,OAAA0Y,EAAA1b,KAAAgD,GAAA,IAGA6W,EAAAzX,UAAA+b,aAAA,SAAAnb,GACA,OAAA0Y,EAAA1b,KAAAgD,GAAA,IAGA6W,EAAAmC,cAAA,SAAAhB,EAAAhY,GACA,MAAA,mBAAAgY,EAAAgB,cACAhB,EAAAgB,cAAAhZ,GAEAgZ,EAAAvc,KAAAub,EAAAhY,IAIA6W,EAAAzX,UAAA4Z,cAAAA,EAiBAnC,EAAAzX,UAAAgc,WAAA,WACA,OAAA,EAAApe,KAAA8Z,aAAAuE,QAAAC,QAAAte,KAAAsP,SAAA","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Component that handles gamepad controls\n *\n */\nexport default class Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to handle\n   */\n  constructor(count) {\n    this.states = Array(count)\n      .fill(null)\n      .map(_ => ({\n        left: false,\n        right: false,\n        action: false,\n      }));\n    this.statesModified = false;\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @protected\n   */\n  modifyState(id, key, value) {\n    if (this.states[id][key] !== value) {\n      this.states[id][key] = value;\n      this.statesModified = true;\n    }\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    if (this.statesModified) {\n      const result = this.states;\n      this.states = this.states.map(s => Object.assign({}, s)); // immutability: use cloned array for future changes\n      this.statesModified = false;\n      return result;\n    } else {\n      return this.states;\n    }\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles gamepad controls\n *\n */\nexport default class GamepadControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n  }\n\n  updateState() {\n    // clone the current state such state objects are immutable\n    this.states = [...this.states];\n    Array.from(navigator.getGamepads())\n      .filter(gp => gp !== null && gp.index < this.states.length)\n      .forEach(gp => {\n        this.modifyState(gp.index, \"left\", gp.axes[0] < -0.5);\n        this.modifyState(gp.index, \"right\", gp.axes[0] > 0.5);\n        this.modifyState(gp.index, \"action\", gp.buttons[1].pressed || gp.buttons[2].pressed);\n      });\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    this.updateState();\n    return super.getStates();\n  }\n}\n","import Controls from \"./controls\";\n\nconst keyMap = {\n  'ArrowLeft': { id: 0, prop: 'left' },\n  'ArrowRight': { id: 0, prop: 'right' },\n  'ArrowDown': { id: 0, prop: 'action' },\n  'KeyA': { id: 1, prop: 'left' },\n  'KeyD': { id: 1, prop: 'right' },\n  'KeyS': { id: 1, prop: 'action' },\n};\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class KeyboardControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n\n    const keyCallback = ev => {\n      const key = keyMap[ev.code];\n      if (key && key.id < count)\n        this.modifyState(key.id, key.prop, ev.type === 'keydown');\n    };\n\n    window.addEventListener('keydown', keyCallback);\n    window.addEventListener('keyup', keyCallback);\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class ScreenControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n    this.element = document.createElement('div');\n    this.element.classList.add('screen-controls');\n    this.element.classList.add(`with-${count}-controls`);\n\n    for (let i = 0; i < this.states.length; ++i)\n      this.element.appendChild(this.buildControl(i));\n\n    // Global mouseup handling for all buttons\n    this.mousePressedButton = null;\n    window.addEventListener('mouseup', () => {\n      if (this.mousePressedButton !== null) {\n        this.modifyState(this.mousePressedButton.id, this.mousePressedButton.name, false);\n        this.mousePressedButton.element.classList.remove('active');\n        this.mousePressedButton = null;\n      }\n    });\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @private\n   * @param {Number} id\n   *  Zero-based integer index of the controller\n   * @return {HTMLDivElement}\n   */\n  buildControl(id) {\n    const root = document.createElement('div');\n    root.classList.add('screen-control', `screen-control-${id}`);\n\n    const newButton = (name) => {\n      const button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.classList.add(name);\n\n      const checkTouches = (ev) => {\n        if (ev.targetTouches.length > 0) {\n          this.modifyState(id, name, true);\n          button.classList.add('active');\n        } else {\n          this.modifyState(id, name, false);\n          button.classList.remove('active');\n        }\n        ev.preventDefault();\n      };\n\n      button.addEventListener('touchstart', checkTouches, { passive: false });\n      button.addEventListener('touchmove', checkTouches, { passive: false });\n      button.addEventListener('touchend', checkTouches, { passive: false });\n      button.addEventListener('touchcancel', checkTouches, { passive: false });\n\n      button.addEventListener('mousedown', () => {\n        this.modifyState(id, name, true);\n        button.classList.add('active');\n        this.mousePressedButton = {\n          id,\n          name,\n          element: button,\n        };\n      });\n\n      return button;\n    };\n\n    root.appendChild(newButton('left'));\n    root.appendChild(newButton('action'));\n    root.appendChild(newButton('right'));\n\n    return root;\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\n\nexport default class PlayerNumberMode extends GameMode {\n  async preLoadAssets() {\n  }\n\n  async handleEnterMode() {\n    const $overlay = $(this.game.overlay);\n    const { maxPlayers } = this.game.config;\n\n    this.selectedNumber = 1;\n    this.selectorItems = {};\n    $('<div class=\"text text-center numPlayers-title\" />')\n      .text(IMAGINARY.i18n.t('choose-num-players'))\n      .appendTo($overlay);\n    const $selector = $('<div class=\"numPlayers-selector\" />')\n      .addClass(`numPlayers-selector-with-${maxPlayers}`)\n      .appendTo($overlay);\n    for (let i = 1; i <= maxPlayers; i += 1) {\n      this.selectorItems[i] = $('<div class=\"item\" />')\n        .addClass(`item-${i}`)\n        .toggleClass('selected', this.selectedNumber === i)\n        .text(i)\n        .appendTo($selector);\n    }\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    const { maxPlayers } = this.game.config;\n\n    let newSelection = null;\n    if (inputs.find((ctrl, i) => (\n      ctrl.direction === -1 && lastInputs[i].direction !== -1))) {\n      newSelection = Math.max(1, this.selectedNumber - 1);\n    } else if (inputs.find((ctrl, i) => (\n      ctrl.direction === 1 && lastInputs[i].direction !== 1))) {\n      newSelection = Math.min(maxPlayers, this.selectedNumber + 1);\n    }\n\n    if (newSelection && newSelection !== this.selectedNumber) {\n      this.selectorItems[this.selectedNumber].removeClass('selected');\n      this.selectorItems[newSelection].addClass('selected');\n      this.selectedNumber = newSelection;\n    }\n\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.game.numPlayers = this.selectedNumber;\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n    // Move boats\n    // Draw bottom\n    // etc...\n  }\n}\n","import GameMode from './game-mode';\nimport terrain from './terrain';\nimport * as waves from './waves';\n\nconst WATER_HEIGHT_SCALE = 10;\nconst NUM_WATER_POINTS = 300;\nconst WATER_DISTANCE = 200;\nconst WATER_LOOP_DURATION = 20 * 1000;\n\nconst BOAT_DRAFT = 18;\n\nconst TERRAIN_HEIGHT_SCALE = 300;\nconst NUM_TERRAIN_POINTS = 300;\nconst MAX_TERRAIN_EXTREMA = 20;\nconst TERRAIN_MARGIN_WIDTH = 0.1;\nconst TERRAIN_DISTANCE = 300;\n\n// How far should the boat move on user input per ms\nconst SPEED_FACTOR = 0.2 / 1000.0;\n\nconst PROBE_SIZE = 10;\nconst PROBE_DISTANCE_AT_REST = 0.3;\nconst PROBE_MIN_DURATION = 500;\nconst PROBE_DELAY = 500;\n\nconst TANGENT_LENGTH = 0.02;\n\nconst TREASURE_SIZE = 0.03;\n\nconst UNCOVER_DURATION = 2000;\nconst ENDING_SEQUENCE_DELAY = 1000;\nconst ENDING_SEQUENCE_TREASURE_DELAY = 1000;\n\nexport default class PlayMode extends GameMode {\n\n  constructor(game) {\n    super(game);\n    const wavesPoints = Array(NUM_WATER_POINTS).fill(null);\n    this.wavesPoints = t => waves.points(wavesPoints, t, game.draw.width(), WATER_HEIGHT_SCALE);\n  }\n\n  async preLoadAssets() {\n    this.shipSymbol = await this.game.loadSVGSymbol('assets/img/ship.svg');\n    this.shipSymbol.attr({ overflow: 'visible' });\n    this.treasureClosedSymbol = await this.game.loadSVGSymbol('assets/img/treasure-closed.svg');\n    this.treasureClosedSymbol.attr({ overflow: 'visible' });\n    this.treasureOpenedSymbol = await this.game.loadSVGSymbol('assets/img/treasure-opened.svg');\n    this.treasureOpenedSymbol.attr({ overflow: 'visible' });\n  }\n\n  async handleEnterMode() {\n    const { draw, numPlayers } = this.game;\n\n    const modeGroup = draw.group()\n      .addClass('play')\n      .addClass('draw')\n      .translate(0, WATER_DISTANCE);\n\n    // Create a boat for each player\n    this.players = Array(numPlayers)\n      .fill(null)\n      .map((_, playerIndex) => {\n        const x = (playerIndex + 1) / (numPlayers + 1);\n        const group = modeGroup.group();\n        group\n          .addClass(`player-${playerIndex}`)\n          .transform({ translateX: x * draw.width() });\n\n        const boat = group.use(this.shipSymbol)\n          .center(0, BOAT_DRAFT);\n\n        const probeParent = group.group();\n        const probe = probeParent.group();\n        probe.line(0, -draw.height(), 0, -PROBE_SIZE / 2);\n        probe.circle(PROBE_SIZE).center(0, 0);\n        probe.transform({ translateY: TERRAIN_DISTANCE * PROBE_DISTANCE_AT_REST });\n\n        // Clip the probe such that only the part below the boat is visible.\n        const probeClip = probeParent.rect(PROBE_SIZE * 4, draw.height())\n          .move(-PROBE_SIZE * 2, BOAT_DRAFT);\n        probeParent.clipWith(probeClip);\n\n        return {\n          id: playerIndex,\n          group: group,\n          boat: boat,\n          probe: probe,\n          x: x,\n          flipX: false,\n          probing: false,\n        };\n      });\n\n    this.water = modeGroup.group()\n      .polyline(this.wavesPoints(0))\n      .addClass('water');\n\n    this.groundGroup = modeGroup.group();\n    const terrainOptions = { marginWidth: TERRAIN_MARGIN_WIDTH };\n    const terrainHeights = terrain(MAX_TERRAIN_EXTREMA, NUM_TERRAIN_POINTS, terrainOptions);\n    const terrainPoints = terrainHeights.map((h, i) => [\n      draw.width() * (i / (terrainHeights.length - 1)),\n      TERRAIN_HEIGHT_SCALE * h,\n    ]);\n    this.terrainHeights = terrainHeights;\n    this.treasureLocation = this.locateTreasure();\n    console.log(\"Treasure location:\", this.treasureLocation);\n\n    const behindGroundGroup = this.groundGroup.group();\n    const treasure = behindGroundGroup.group()\n      .addClass('treasure')\n      .transform({\n        translateX: this.treasureLocation.x * draw.width(),\n        translateY: TERRAIN_DISTANCE + this.treasureLocation.y * TERRAIN_HEIGHT_SCALE,\n      });\n    this.treasureClosed = treasure.use(this.treasureClosedSymbol);\n    this.treasureOpened = treasure.use(this.treasureOpenedSymbol).hide();\n\n\n    this.ground = this.groundGroup.polyline(terrainPoints)\n      .addClass('ground')\n      .translate(0, TERRAIN_DISTANCE)\n      .hide();\n\n    behindGroundGroup.clipWith(this.groundGroup.use(this.ground));\n\n    this.groundClip = this.groundGroup.clip();\n    this.groundGroup.clipWith(this.groundClip);\n\n    this.tangents = modeGroup.group()\n      .translate(0, TERRAIN_DISTANCE);\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    // Move the boats or check if they're lowering the probe\n    const { draw, numPlayers } = this.game;\n    inputs\n      .slice(0, numPlayers) // discard inputs that don't belong to an active player\n      .forEach((input, playerIndex) => {\n        const player = this.players[playerIndex];\n        if (!player.probing) {\n          player.x += SPEED_FACTOR * (delta * input.direction);\n          player.x = Math.min(Math.max(TERRAIN_MARGIN_WIDTH, player.x), 1.0 - TERRAIN_MARGIN_WIDTH);\n          player.flipX = input.direction === 0 ? player.flipX : input.direction === -1;\n          if (input.action && !lastInputs[playerIndex].action) {\n            // Switch to probe mode\n            player.probing = true;\n            // Lower the probe, wait and raise it again\n            const terrainHeight = this.terrainHeight(player.x);\n            const probeHeight = TERRAIN_DISTANCE + TERRAIN_HEIGHT_SCALE * terrainHeight;\n            const probeDuration = probeHeight * (PROBE_MIN_DURATION / TERRAIN_DISTANCE);\n            const runnerDown = player.probe\n              .animate(probeDuration, 0, 'now')\n              .transform({ translateY: probeHeight })\n              .after(() => this.addGroundClip(player.x))\n              .after(() => this.addTangent(player));\n            if (Math.abs(player.x - this.treasureLocation.x) <= TREASURE_SIZE / 2)\n              runnerDown\n                .after(() => this.uncoverGround())\n                .after(() => this.showGameOverSequence(player));\n            const runnerUp = runnerDown.animate(probeDuration, PROBE_DELAY)\n              .transform({ translateY: TERRAIN_DISTANCE * PROBE_DISTANCE_AT_REST })\n              .after(() => player.probing = false);\n            console.log(`Player ${playerIndex} is probing at:`, { x: player.x, y: terrainHeight });\n          }\n        }\n      });\n  }\n\n  draw(delta, ts) {\n    const { draw, numPlayers } = this.game;\n    // Move boats\n    // Draw bottom\n    // etc...\n\n    this.water.plot(this.wavesPoints(ts / WATER_LOOP_DURATION));\n\n    this.players.forEach((player, playerIndex) => {\n      const x = player.x;\n      const y = WATER_HEIGHT_SCALE * waves.height(x, ts / WATER_LOOP_DURATION);\n      const slope = WATER_HEIGHT_SCALE * waves.slope(x, ts / WATER_LOOP_DURATION);\n      const angle = 0.25 * 180 * Math.atan2(slope, draw.width()) / Math.PI;\n      const boatTransform = {\n        rotate: angle,\n      };\n      if (player.flipX)\n        boatTransform.flip = 'x';\n      player.boat.transform(boatTransform);\n      player.group.transform({\n        translateX: x * draw.width(),\n        translateY: y\n      });\n    });\n  }\n\n  terrainHeight(x) {\n    return this.terrainHeightExt(x).value;\n  }\n\n  terrainHeightExt(x) {\n    const xInArray = (this.terrainHeights.length - 1) * x;\n    const tmpIndex = Math.floor(xInArray);\n    const i0 = tmpIndex === this.terrainHeights.length - 1 ? tmpIndex - 1 : tmpIndex;\n    const i1 = i0 + 1;\n    const h0 = this.terrainHeights[i0];\n    const h1 = this.terrainHeights[i1];\n    const t = xInArray - i0;\n    return {\n      value: h0 + t * (h1 - h0),\n      slope: (h1 - h0) * (this.terrainHeights.length - 1),\n    };\n  }\n\n  locateTreasure() {\n    const argmax = array => [].reduce.call(array, (m, c, i, arr) => c > arr[m] ? i : m, 0);\n    const treasureIndex = argmax(this.terrainHeights);\n    return {\n      x: treasureIndex / (this.terrainHeights.length - 1),\n      y: this.terrainHeights[treasureIndex],\n    };\n  }\n\n  addTangent(player) {\n    const { draw } = this.game;\n    const width = draw.width();\n    const { value, slope } = this.terrainHeightExt(player.x);\n    const angle = 180 * Math.atan2(slope * TERRAIN_HEIGHT_SCALE, width) / Math.PI;\n    this.tangents.line(-width * TANGENT_LENGTH / 2, 0, width * TANGENT_LENGTH / 2, 0,)\n      .addClass(`player-${player.id}`)\n      .transform({\n        translateX: width * player.x,\n        translateY: TERRAIN_HEIGHT_SCALE * value,\n        rotate: angle,\n      });\n  }\n\n  addGroundClip(x) {\n    const { draw } = this.game;\n    const w = draw.width();\n    const h = draw.height();\n    const rect = this.groundClip\n      .polygon([[-w, -h], [w, -h], [w, h], [-w, h]])\n      .center(draw.width() * x, 0)\n      .transform({ scaleX: 0.001 });\n    this.groundClip.add(rect);\n  }\n\n  async uncoverGround() {\n    const { draw } = this.game;\n    this.ground.show();\n    const treasureSpotlight = this.groundClip.circle(2 * TREASURE_SIZE * draw.width())\n      .center(\n        draw.width() * this.treasureLocation.x,\n        TERRAIN_DISTANCE + TERRAIN_HEIGHT_SCALE * this.treasureLocation.y\n      );\n\n    // Move the treasure spotlight up a bit so it doesn't point at the treasure location on the\n    // curve, but rather at the treasure chest\n    treasureSpotlight.dy(-2 * 0.3 * TREASURE_SIZE * draw.width());\n\n    const uncoverGround = clip => new Promise(resolve => {\n      clip.animate(UNCOVER_DURATION)\n        .ease(pos => -(Math.sqrt(1 - (pos * pos)) - 1))\n        .transform({ scaleX: 1.0 })\n        .after(resolve);\n    });\n    return Promise.all(this.groundClip.children().map(uncoverGround));\n  }\n\n  async showGameOverSequence(winner) {\n    const { draw } = this.game;\n    const $overlay = $(this.game.overlay);\n\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n    const treasureAnnouncement = IMAGINARY.i18n.t('treasure-announcement-begin')\n      + (winner.id + 1)\n      + IMAGINARY.i18n.t('treasure-announcement-end');\n    const randomElement = arr => arr[Math.floor(Math.random() * (arr.length - 1))];\n    const treasureString = randomElement(IMAGINARY.i18n.t('treasures'));\n\n    const $treasureAnnouncement = $(\"<div>\").text(treasureAnnouncement);\n    const $treasureString = $(\"<div>\").text(treasureString).css(\"visibility\", \"visible\")\n      .css('visibility', 'hidden');\n\n    const $inner = $(`<div class=\"ending-sequences-text player-${winner.id}\" />`)\n      .append([$treasureAnnouncement, $treasureString]);\n\n    const left = 100 * this.treasureLocation.x;\n    const bottom = 100 - 100 * (WATER_DISTANCE + TERRAIN_DISTANCE) / draw.height();\n    const $outer = $('<div class=\"ending-sequences-text-container\">')\n      .css({ left: `${left}%`, bottom: `${bottom}%` })\n      .append($inner);\n\n    await delay(ENDING_SEQUENCE_DELAY);\n    $overlay.empty().append($outer);\n\n    await delay(ENDING_SEQUENCE_TREASURE_DELAY);\n    $treasureString.css(\"visibility\", \"visible\");\n    this.treasureOpened.show();\n    this.treasureClosed.hide();\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\nimport WavyAnimation from './wavy-animation';\n\nexport default class TitleMode extends GameMode {\n  async preLoadAssets() {\n    this.logoSprite = await this.game.loadSVGSymbol('assets/img/descent-logo.svg');\n    this.poly = this.logoSprite.findOne('#descent');\n  }\n\n  async handleEnterMode() {\n    const { draw } = this.game;\n    const pressToStart = document.createElement('div');\n    pressToStart.classList.add('blinking', 'text', 'text-center', 'text-vcenter');\n    pressToStart.textContent = IMAGINARY.i18n.t('press-to-start');\n    this.game.overlay.append(pressToStart);\n\n    const gradientLogo = draw.use(this.logoSprite)\n      .size(1200, 400)\n      .stroke({ color: '#00368a', width: 2 })\n      .fill('transparent')\n      .center(1920 / 2, 1080 / 2.5);\n\n    gradientLogo.animate({ duration: 5000 }).stroke({ color: '#34c6ff' });\n    this.wavyStep = WavyAnimation(this.logoSprite, { duration: 3500 });\n\n    this.animCounter = 0;\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts0) {\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n\n    this.wavyStep(delta, ts);\n  }\n}\n","/* eslint-disable class-methods-use-this,no-unused-vars,no-empty-function */\nimport EventEmitter from 'events';\n\n/**\n * Abstract class for GameMode\n *\n * A GameMode does the actual handling of the input and drawing\n */\nexport default class GameMode {\n  /**\n   * Constructor\n   *\n   * @param {GradientDescentGame} game\n   */\n  constructor(game) {\n    // noinspection JSUnusedGlobalSymbols\n    this.game = game;\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Preload any external assets that will be needed during the game\n   *\n   * This method runs during game initialization.\n   * @return {Promise<void>}\n   */\n  async preLoadAssets() {\n\n  }\n\n  /**\n   * Called by the game when the mode is entered.\n   *\n   * Can be used to add DOM elements, event handlers and initialize\n   * internal state. Anything done here must be cleaned up in\n   * handleExitMode.\n   */\n  async handleEnterMode() {\n\n  }\n\n  /**\n   * Called by the game when the mode is going to be exited\n   *\n   * Should be used to remove DOM elements, event handlers\n   * or anything else that was created on handleEnterMode.\n   */\n  async handleExitMode() {\n\n  }\n\n  /**\n   * Called once per frame so the mode can handle controller input\n   *\n   * Current input state and the previous one are passed\n   * to help with state change detection.\n   *\n   * Both are arrays with N objects with shape:\n   * - direction {integer}: Either -1, 0 or 1.\n   * - action {bool}\n   *\n   * @param {[{direction: Number, action: Boolean}]} inputs\n   * @param {[{direction: Number, action: Boolean}]} lastInputs\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n\n   *\n   */\n  handleInputs(inputs, lastInputs, delta, ts) {\n\n  }\n\n  /**\n   * Called once per frame so the mode can draw based on the game's state\n   *\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n   */\n  draw(delta, ts) {\n\n  }\n\n  /**\n   * Triggers an event for the game to handle\n   *\n   * Events can be used to transition to another mode, etc.\n   *\n   * @param {string} name\n   */\n  triggerEvent(name) {\n    this.events.emit(name);\n  }\n}\n","/* globals SVG */\nimport PlayMode from './game-mode-play';\nimport TitleMode from './game-mode-title';\nimport PlayerNumberMode from './game-mode-numplayers';\nimport GamepadControls from \"./controls/gamepad\";\nimport ScreenControls from './controls/screen';\nimport KeyboardControls from \"./controls/keyboard\";\n\n/**\n * The main application\n *\n * This class creates the main UI elements and runs the\n * main game loop (read input, draw).\n *\n * The game can be in one of various modes (see GameMode)\n * which decides how to draw and process input.\n */\nexport default class GradientDescentGame {\n  constructor(container, config) {\n    this.container = container;\n    this.config = config;\n\n    this.inputs = this.createInputs();\n    this.inputsLast = this.createInputs();\n\n    this.gameLoop = null;\n    this.isPaused = false;\n    this.modes = {};\n    this.currentMode = null;\n\n    this.controls = {};\n    this.debugControlsPane = null;\n\n    this.numPlayers = this.config.maxPlayers;\n  }\n\n  /**\n   * Initializes the app and downloads any external assets\n   *\n   * @return {Promise<void>}\n   */\n  async init() {\n    const [width, height] = [1920, 864];\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n\n    const viewContainer = document.createElement('div');\n    viewContainer.classList.add('game-view');\n    this.container.append(viewContainer);\n\n    this.svgDoc = SVG().addTo(viewContainer);\n    this.svgDoc\n      .viewbox(0, 0, width, height)\n      .attr('preserveAspectRatio', 'xMinYMin meet');\n\n    this.draw = this.svgDoc.nested().size(width, height);\n\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n    this.container.append(this.overlay);\n\n    if (this.config.useScreenControls) {\n      this.controls.screen = new ScreenControls(this.config.maxPlayers);\n      this.container.appendChild(this.controls.screen.element);\n    }\n\n    if (this.config.useGamepads) {\n      this.controls.gamepad = new GamepadControls(this.config.maxPlayers);\n    }\n    if (this.config.useKeyboardControls) {\n      this.controls.keyboard = new KeyboardControls(this.config.maxPlayers);\n    }\n\n    if (this.config.debugControls) {\n      this.debugControlsPane = document.createElement('div');\n      this.debugControlsPane.classList.add('debug-pane');\n      this.debugControlsPane.classList.add('debug-pane-controls');\n      this.container.appendChild(this.debugControlsPane);\n    }\n\n    await this.registerMode('title', new TitleMode(this));\n    await this.registerMode('numplayers', new PlayerNumberMode(this));\n    await this.registerMode('play', new PlayMode(this));\n\n    if (this.config.continuousGame) {\n      this.transition('play', 'done', 'play');\n      await this.setMode('play');\n    } else {\n      this.transition('title', 'done',\n        this.config.maxPlayers > 1 ? 'numplayers' : 'play');\n      this.transition('numplayers', 'done', 'play');\n      this.transition('play', 'done', 'title');\n      await this.setMode('title');\n    }\n  }\n\n  /**\n   * Loads an external SVG file into a symbol within the main svg element\n   *\n   * @param {string} uri\n   * @param {boolean} clearStyles\n   *  If true removes the style elements from the file\n   * @return {Promise<SVG.Symbol>}\n   */\n  async loadSVGSymbol(uri, clearStyles = true) {\n    const response = await fetch(uri);\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`Server returned status ${response.status} (${response.statusText}) loading ${uri}.`);\n    }\n    const newSymbol = this.svgDoc.symbol().svg(await response.text());\n    if (clearStyles) {\n      newSymbol.find('style').forEach(s => s.remove());\n    }\n\n    return newSymbol;\n  }\n\n  /**\n   * Initializes the input state\n   *\n   * @private\n   */\n  initInputs() {\n    this.inputs = this.createInputs();\n  }\n\n  createInputs() {\n    return Array(this.config.maxPlayers)\n      .fill(null)\n      .map(() => ({ direction: 0, action: false }));\n  }\n\n  /**\n   * Reads the input state from all enabled controller types\n   *\n   * Loads the new input state in this.input and the previous\n   * state in this.inputLast.\n   *\n   * @private\n   */\n  readInputs() {\n    this.inputsLast = this.inputs;\n    const states = Object.values(this.controls).map(c => c.getStates());\n    const inputReducer = (accInput, curState) => ({\n      direction: curState.right ? 1 : (curState.left ? -1 : accInput.direction),\n      action: curState.action || accInput.action,\n    });\n    this.inputs = this.createInputs().map(\n      (input, i) => states.map(s => s[i]).reduce(inputReducer, input)\n    );\n\n    if (this.debugControlsPane) {\n      this.debugControlsPane.textContent = this.inputs.map((ctrl, i) => (\n        `C${i}: d=${ctrl.direction} a=${ctrl.action ? 'T' : 'F'}`\n      )).join('\\u00a0\\u00a0\\u00a0\\u00a0'); // four &nbsp;\n    }\n  }\n\n  /**\n   * Game loop\n   */\n  run() {\n    if (!this.gameLoop) {\n      let lastTs = 0;\n      let lag = 0;\n      const MAX_DELTA = 125;\n\n      this.gameLoop = (ts) => {\n        if (!this.isPaused) {\n          this.readInputs();\n          lag += Math.max(0, (ts - lag) - lastTs - MAX_DELTA);\n          ts -= lag;\n          const delta = ts - lastTs;\n          this.currentMode.handleInputs(this.inputs, this.inputsLast, delta, ts);\n          this.currentMode.draw(delta, ts);\n          lastTs = ts;\n\n          window.requestAnimationFrame(this.gameLoop);\n        }\n      };\n    }\n    window.requestAnimationFrame(this.gameLoop);\n  }\n\n  /**\n   * Pauses the game.\n   *\n   * While paused the main game loop not run.\n   */\n  pause() {\n    this.isPaused = true;\n  }\n\n  /**\n   * Resumes the game.\n   *\n   * Enables the main game loop.\n   */\n  resume() {\n    if (this.isPaused) {\n      this.isPaused = false;\n      this.run();\n    }\n  }\n\n  /**\n   * Registers a game mode\n   *\n   * @private\n   * @param {string} id\n   *  A name that identifies the mode\n   * @param {GameMode} mode\n   *  A GameMode subclass\n   * @return {Promise<void>}\n   */\n  async registerMode(id, mode) {\n    this.modes[id] = mode;\n    await mode.preLoadAssets();\n  }\n\n  /**\n   * Changes the current game mode\n   *\n   * @param {string} modeID\n   *  Name of a previously registered mode\n   * @return {Promise<void>}\n   */\n  async setMode(modeID) {\n    this.pause();\n\n    if (this.currentMode) {\n      await this.currentMode.handleExitMode();\n    }\n    if (this.modes[modeID] === undefined) {\n      throw new Error(`Can't change to unknown mode ${modeID}`);\n    }\n    this.currentMode = this.modes[modeID];\n    this.draw.clear();\n    this.overlay.innerHTML = '';\n    await this.currentMode.handleEnterMode();\n\n    this.resume();\n  }\n\n  transition(modeId, event, nextModeId = null, callback = null) {\n    if (this.modes[modeId] === undefined) {\n      throw new Error(`Can't define transition from unknown game mode '${modeId}'`);\n    }\n    if (nextModeId && this.modes[nextModeId] === undefined) {\n      throw new Error(`Can't define transition to unknown game mode '${nextModeId}'`);\n    }\n    this.modes[modeId].events.on(event, () => {\n      if (this.currentMode !== this.modes[modeId]) {\n        throw new Error(`Mode ${modeId} triggered the event ${event} while not active. Something was not cleaned up?`);\n      }\n      if (nextModeId !== null) {\n        this.setMode(nextModeId);\n      }\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  }\n}\n","/* globals IMAGINARY */\nimport GradientDescentGame from './game';\n\nconst defaultConfig = {\n  defaultLanguage: 'en',\n  useGamepads: true,\n  useScreenControls: true,\n  maxPlayers: 2,\n  continuousGame: false,\n  debugControls: false,\n};\n\n/**\n * Loads the config file from an external JSON file\n *\n * @param {String} uri\n * @return {Promise<any>}\n */\nasync function loadConfig(uri) {\n  const response = await fetch(uri);\n  if (response.status >= 200 && response.status < 300) {\n    try {\n      return await response.json();\n    } catch (e) {\n      throw new Error(`Error parsing config file: ${e.message}`);\n    }\n  }\n  throw new Error(`Server returned status ${response.status} (${response.statusText}) loading config file.`);\n}\n\n/**\n * Load config files and start the program\n */\n(async function main() {\n  try {\n    const config = Object.assign({}, defaultConfig, await loadConfig('./config.json'));\n    await IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage: config.defaultLanguage || 'en',\n    });\n    // eslint-disable-next-line no-unused-vars\n    const game = new GradientDescentGame(\n      document.querySelector('.main'),\n      config\n    );\n    window.game = game;\n    await game.init();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}());\n","function smoothChaikin(arr, num, open = true) {\n  if (num === 0)\n    return arr;\n\n  const l = arr.length;\n  const smooth = arr.map((c, i) => [\n    [0.75 * c[0] + 0.25 * arr[(i + 1) % l][0], 0.75 * c[1] + 0.25 * arr[(i + 1) % l][1]],\n    [0.25 * c[0] + 0.75 * arr[(i + 1) % l][0], 0.25 * c[1] + 0.75 * arr[(i + 1) % l][1]]\n  ]).flat();\n\n  if (open) {\n    smooth.length -= 1;\n    smooth[0] = arr[0];\n    smooth[smooth.length - 1] = arr[arr.length - 1];\n  }\n\n  return smoothChaikin(smooth, num - 1, open);\n}\n\nfunction subdivide(length, leftHeight, rightHeight) {\n  return {\n    index: Math.floor(length * Math.random()),\n    height: Math.max(leftHeight, rightHeight) * Math.random(),\n  };\n}\n\nfunction generateInnerTerrainHeights(heights, leftHeight, rightHeight) {\n  if (heights.length > 0) {\n    const { index, height } = subdivide(heights.length, leftHeight, rightHeight);\n    heights[index] = height;\n    generateInnerTerrainHeights(heights.subarray(0, index), leftHeight, height);\n    generateInnerTerrainHeights(heights.subarray(index + 1, heights.length),\n      height,\n      rightHeight);\n  }\n  return heights;\n}\n\nfunction generateTerrainPoints(numPoints, marginWidth = 0.1, marginHeight = 0.2, jitter = 0.25) {\n  const heights = new Float32Array(numPoints);\n  const marginIndices = [\n    Math.floor(marginWidth * numPoints),\n    Math.floor(marginWidth + (1 - 2 * marginWidth) * numPoints),\n  ];\n  const predefinedHeights = [\n    [0, Math.random() * marginHeight],\n    [marginIndices[0], marginHeight],\n    [marginIndices[0] + 1 + Math.floor(Math.random() * (marginIndices[1] - marginIndices[0])),\n     1.0],\n    [marginIndices[1], marginHeight],\n    [numPoints - 1, Math.random() * marginHeight],\n  ];\n\n  if (numPoints > 0) {\n    predefinedHeights.forEach(([i, h]) => heights[i] = h);\n    predefinedHeights.reduce(([i0, h0], [i1, h1]) => {\n      generateInnerTerrainHeights(heights.subarray(i0 + 1, i1), h0, h1);\n      return [i1, h1];\n    });\n  }\n\n  // restrict jitter range to prevent points from switching their order\n  jitter = Math.max(0.0, Math.min(jitter, 1.0));\n\n  return new Array(heights.length)\n    .fill(null)\n    .map((_, i) => [\n      (i + jitter * (Math.random() - 0.5)) / (heights.length - 1),\n      heights[i]\n    ]);\n}\n\nfunction convertPointsToHeights(points, numHeights) {\n  const left = points[0][0];\n  const right = points[points.length - 1][0];\n  const width = right - left;\n  const heights = Array(numHeights);\n  let j = 0;\n  for (let i = 0; i < heights.length - 1; ++i) {\n    while (i >= (numHeights - 1) * (points[j][0] - left) / width) {\n      ++j;\n    }\n    const t = (left + ((i / (numHeights - 1)) * width) - (points[j - 1][0]))\n      / (points[j][0] - points[j - 1][0]);\n    heights[i] = points[j - 1][1] + (points[j][1] - points[j - 1][1]) * t;\n  }\n  heights[heights.length - 1] = points[points.length - 1][1];\n  return heights;\n}\n\nconst defaultOptions = {\n  marginWidth: 0.1,\n  marginHeight: 0.1,\n  jitter: 0.25,\n  smoothing: 6,\n};\n\nexport default function terrain(numSamples, length, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  const roughTerrainPoints = generateTerrainPoints(\n    numSamples,\n    options.marginWidth,\n    options.marginHeight,\n    options.jitter\n  );\n  const smoothTerrainPoints = smoothChaikin(roughTerrainPoints, options.smoothing);\n  const smoothTerrainHeights = convertPointsToHeights(smoothTerrainPoints, length);\n  return smoothTerrainHeights;\n}\n","// The water surface consists of superimposed sin waves that are moving with respect to ts.\n// Fixing x, the frequency factors with respect to ts are [1,-1,2,3].\n// Since the lowest common denominator of these factors is 6 and the base frequency is 1 / (2 * PI),\n// the period of the water animation is 6 / (1 / (2 * PI)) = 12 * PI.\nconst PERIOD = 12 * Math.PI;\n\nexport function height(x, t) {\n  t = (t * PERIOD) % PERIOD;\n  return (\n    Math.sin(x * 100 + t)\n    + Math.sin(x * 50 - 1 * t)\n    + Math.sin(x * 30 + 2 * t)\n    + Math.sin(x * 10 - 3 * t)\n  ) / 4;\n}\n\nexport function slope(x, t) {\n  t = (t * PERIOD) % PERIOD;\n  return (\n    100 * Math.cos(100 * x + t)\n    + 50 * Math.cos(50 * x - t)\n    + 30 * Math.cos(30 * x + 2 * t)\n    + 10 * Math.cos(10 * x - 3 * t)\n  ) / 4;\n}\n\nexport function heights(arr, t, xScale = 1.0, yScale = 1.0) {\n  arr.forEach((_, i) => arr[i] = height(i / (arr.length - 1), t));\n  return arr;\n}\n\nexport function points(arr, t, xScale = 1.0, yScale = 1.0) {\n  arr.forEach((_, i) => {\n    const x = i / (arr.length - 1);\n    arr[i] = [xScale * x, yScale * height(x, t)];\n  });\n  return arr;\n}\n","/**\n * Setup a wave-like animation for an svg.js shape made up of polygons.\n *\n * This animation works by applying a transformation on all points of\n * all polygons of the passed shape. The points will move on a sine wave\n * that is continuously phase shifting and whose amplitude decreases over time.\n *\n * Returns a stepping function that takes a delta in milliseconds which should\n * be called on the frame rendering function.\n *\n * Options:\n * - xAmplitude: Maximum distance that the x coordinates are shifted from their\n *   starting position.\n * - duration: Duration of the animation\n * - cycles: Number of cycles of phase shifting.\n *\n * @param {SVG.Container} shape\n *  The shape whose polygons will be animated\n * @param {Object} userOptions\n *  Options (see above)\n * @return {function(...[*]=)}\n *  Returns an animation callback that takes a delta.\n */\nexport default function WavyAnimation(shape, userOptions = {}) {\n  const defaultOptions = {\n    xAmplitude: 50,\n    duration: 5000,\n    cycles: 3,\n  };\n\n  const options = Object.assign({}, defaultOptions, userOptions);\n  const polygons = shape.find('polygon');\n  const originalPlots = polygons.map(p => p.plot());\n  const maxY = Math.max(...originalPlots.flat().map(([, y]) => y));\n\n  let counter = 0;\n\n  return (delta, ts) => {\n    if (counter > options.duration) {\n      return;\n    }\n    counter += delta;\n    const progress = Math.min(counter, options.duration) / options.duration;\n    polygons.forEach((p, i) => {\n      p.plot(originalPlots[i].map(([x, y]) => (\n        [\n          x + Math.sin((y / maxY + progress * options.cycles) * Math.PI * 2)\n          * options.xAmplitude * (1 - (progress ** 2)),\n          y,\n        ]\n      )));\n    });\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n"]}