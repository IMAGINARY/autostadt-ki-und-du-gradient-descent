{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/controls/controls.js","js/controls/gamepad.js","js/controls/keyboard.js","js/controls/screen.js","js/game-mode-numplayers.js","js/game-mode-play.js","js/game-mode-title.js","js/game-mode.js","js/game.js","js/main.js","js/terrain.js","js/waves.js","js/wavy-animation.js","node_modules/events/events.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Controls","count","_classCallCheck","this","states","Array","fill","map","_","left","right","action","statesModified","id","key","value","result","s","Object","assign","_controls","GamepadControls","_super","_this","_toConsumableArray","from","navigator","getGamepads","filter","gp","index","forEach","modifyState","axes","buttons","pressed","updateState","_get","_getPrototypeOf","prototype","keyMap","ArrowLeft","prop","ArrowRight","ArrowDown","KeyA","KeyD","KeyS","keyCodes","keys","preventDefaultActionForKeys","includes","preventDefault","KeyboardControls","keyCallback","ev","type","window","addEventListener","ScreenControls","element","document","createElement","classList","add","concat","appendChild","buildControl","mousePressedButton","name","remove","_this2","root","newButton","button","checkTouches","targetTouches","setAttribute","passive","_gameMode","PlayerNumberMode","$overlay","$","game","overlay","maxPlayers","config","selectedNumber","selectorItems","text","IMAGINARY","i18n","appendTo","$selector","addClass","toggleClass","inputs","lastInputs","newSelection","find","ctrl","direction","Math","max","min","removeClass","numPlayers","triggerEvent","_interopRequireDefault","_terrain","waves","_interopRequireWildcard","TERRAIN_DISTANCE","PlayMode","wavesPoints","points","draw","width","loadSVGSymbol","shipSymbol","attr","overflow","treasureClosedSymbol","treasureOpenedSymbol","modeGroup","group","translate","players","playerIndex","x","transform","translateX","boat","use","center","probeParent","probe","line","height","circle","translateY","probeClip","rect","PROBE_SIZE","move","clipWith","flipX","probing","water","polyline","groundGroup","terrainOptions","marginWidth","terrainHeights","terrainPoints","h","treasureLocation","locateTreasure","console","log","behindGroundGroup","treasure","y","treasureClosed","treasureOpened","hide","ground","groundClip","clip","tangents","delta","_this3","_this$game2","slice","input","player","terrainHeight","probeHeight","probeDuration","runnerDown","animate","after","addGroundClip","addTangent","runnerUp","abs","TREASURE_SIZE","uncoverGround","showGameOverSequence","ts","_this$game3","plot","slope","boatTransform","rotate","atan2","PI","flip","terrainHeightExt","xInArray","tmpIndex","floor","i0","i1","h0","h1","array","treasureIndex","reduce","m","arr","_this$terrainHeightEx","angle","w","polygon","scaleX","show","dy","Promise","resolve","ease","pos","sqrt","all","children","winner","delay","ms","setTimeout","treasureAnnouncement","treasureString","random","randomElement","$treasureAnnouncement","$treasureString","css","$inner","append","bottom","$outer","empty","_wavyAnimation","TitleMode","logoSprite","poly","findOne","pressToStart","textContent","size","stroke","color","duration","wavyStep","animCounter","_events","GameMode","events","emit","_gameModePlay","_gameModeTitle","_gameModeNumplayers","_gamepad","_screen","_keyboard","GradientDescentGame","container","createInputs","inputsLast","gameLoop","isPaused","modes","currentMode","controls","debugControlsPane","viewContainer","svgDoc","SVG","addTo","viewbox","nested","useScreenControls","screen","useGamepads","gamepad","useKeyboardControls","keyboard","debugControls","registerMode","continuousGame","transition","setMode","uri","clearStyles","fetch","response","status","statusText","symbol","newSymbol","svg","inputReducer","accInput","curState","values","getStates","join","lastTs","lag","readInputs","handleInputs","requestAnimationFrame","run","mode","preLoadAssets","modeID","pause","handleExitMode","undefined","clear","innerHTML","handleEnterMode","resume","modeId","event","nextModeId","arguments","callback","on","_game","_main","defaultConfig","defaultLanguage","loadConfig","_callee2","regeneratorRuntime","wrap","_context2","prev","next","sent","json","abrupt","t0","message","stop","_asyncToGenerator","mark","_callee","_context","t1","t2","t3","init","queryStringVariable","translationsDirectory","querySelector","t4","error","apply","numSamples","options","defaultOptions","numHeights","heights","j","convertPointsToHeights","smoothChaikin","num","open","l","smooth","flat","numPoints","marginHeight","jitter","Float32Array","marginIndices","predefinedHeights","_ref","_ref2","_slicedToArray","_ref3","_ref4","_ref5","_ref6","generateInnerTerrainHeights","leftHeight","rightHeight","_subdivide","subarray","generateTerrainPoints","smoothing","PERIOD","cos","svgContainer","numSteps","xScale","yScale","keyframes","keyframesString","replace","attributeName","dur","repeatCount","sin","shape","userOptions","xAmplitude","cycles","polygons","originalPlots","maxY","counter","progress","pow","objectCreate","create","proto","F","objectKeys","obj","k","hasOwnProperty","push","bind","Function","context","fn","EventEmitter","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","defineProperty","err","$getMaxListeners","that","_addListener","target","listener","prepend","existing","TypeError","newListener","unshift","warned","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","args","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","enumerable","get","set","arg","setMaxListeners","isNaN","getMaxListeners","er","handler","len","doError","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Component that handles gamepad controls\n *\n */\nexport default class Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to handle\n   */\n  constructor(count) {\n    this.states = Array(count)\n      .fill(null)\n      .map(_ => ({\n        left: false,\n        right: false,\n        action: false,\n      }));\n    this.statesModified = false;\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @protected\n   */\n  modifyState(id, key, value) {\n    if (this.states[id][key] !== value) {\n      this.states[id][key] = value;\n      this.statesModified = true;\n    }\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    if (this.statesModified) {\n      const result = this.states;\n      this.states = this.states.map(s => Object.assign({}, s)); // immutability: use cloned array for future changes\n      this.statesModified = false;\n      return result;\n    } else {\n      return this.states;\n    }\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles gamepad controls\n *\n */\nexport default class GamepadControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n  }\n\n  updateState() {\n    // clone the current state such state objects are immutable\n    this.states = [...this.states];\n    Array.from(navigator.getGamepads())\n      .filter(gp => gp !== null && gp.index < this.states.length)\n      .forEach(gp => {\n        this.modifyState(gp.index, \"left\", gp.axes[0] < -0.5);\n        this.modifyState(gp.index, \"right\", gp.axes[0] > 0.5);\n        this.modifyState(gp.index, \"action\", gp.buttons[1].pressed || gp.buttons[2].pressed);\n      });\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    this.updateState();\n    return super.getStates();\n  }\n}\n","import Controls from \"./controls\";\n\nconst keyMap = {\n  'ArrowLeft': { id: 0, prop: 'left' },\n  'ArrowRight': { id: 0, prop: 'right' },\n  'ArrowDown': { id: 0, prop: 'action' },\n  'KeyA': { id: 1, prop: 'left' },\n  'KeyD': { id: 1, prop: 'right' },\n  'KeyS': { id: 1, prop: 'action' },\n};\nconst keyCodes = Object.keys(keyMap);\n\n/**\n * Certain default actions like scrolling should be prevented for the keys used for the game.\n */\nfunction preventDefaultActionForKeys(e) {\n  if (keyCodes.includes(e.code))\n    e.preventDefault();\n}\n\n/**\n * Component that handles keyboard controls\n *\n * Supports up to two players at the moment.\n *\n */\nexport default class KeyboardControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n\n    const keyCallback = ev => {\n      const key = keyMap[ev.code];\n      if (key && key.id < count)\n        this.modifyState(key.id, key.prop, ev.type === 'keydown');\n    };\n\n    window.addEventListener('keydown', keyCallback);\n    window.addEventListener('keyup', keyCallback);\n    window.addEventListener(\"keydown\", preventDefaultActionForKeys, false);\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class ScreenControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n    this.element = document.createElement('div');\n    this.element.classList.add('screen-controls');\n    this.element.classList.add(`with-${count}-controls`);\n\n    for (let i = 0; i < this.states.length; ++i)\n      this.element.appendChild(this.buildControl(i));\n\n    // Global mouseup handling for all buttons\n    this.mousePressedButton = null;\n    window.addEventListener('mouseup', () => {\n      if (this.mousePressedButton !== null) {\n        this.modifyState(this.mousePressedButton.id, this.mousePressedButton.name, false);\n        this.mousePressedButton.element.classList.remove('active');\n        this.mousePressedButton = null;\n      }\n    });\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @private\n   * @param {Number} id\n   *  Zero-based integer index of the controller\n   * @return {HTMLDivElement}\n   */\n  buildControl(id) {\n    const root = document.createElement('div');\n    root.classList.add('screen-control', `screen-control-${id}`);\n\n    const newButton = (name) => {\n      const button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.classList.add(name);\n\n      const checkTouches = (ev) => {\n        if (ev.targetTouches.length > 0) {\n          this.modifyState(id, name, true);\n          button.classList.add('active');\n        } else {\n          this.modifyState(id, name, false);\n          button.classList.remove('active');\n        }\n        ev.preventDefault();\n      };\n\n      button.addEventListener('touchstart', checkTouches, { passive: false });\n      button.addEventListener('touchmove', checkTouches, { passive: false });\n      button.addEventListener('touchend', checkTouches, { passive: false });\n      button.addEventListener('touchcancel', checkTouches, { passive: false });\n\n      button.addEventListener('mousedown', () => {\n        this.modifyState(id, name, true);\n        button.classList.add('active');\n        this.mousePressedButton = {\n          id,\n          name,\n          element: button,\n        };\n      });\n\n      return button;\n    };\n\n    root.appendChild(newButton('left'));\n    root.appendChild(newButton('action'));\n    root.appendChild(newButton('right'));\n\n    return root;\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\n\nexport default class PlayerNumberMode extends GameMode {\n  async preLoadAssets() {\n  }\n\n  async handleEnterMode() {\n    const $overlay = $(this.game.overlay);\n    const { maxPlayers } = this.game.config;\n\n    this.selectedNumber = 1;\n    this.selectorItems = {};\n    $('<div class=\"text text-center numPlayers-title\" />')\n      .text(IMAGINARY.i18n.t('choose-num-players'))\n      .appendTo($overlay);\n    const $selector = $('<div class=\"numPlayers-selector\" />')\n      .addClass(`numPlayers-selector-with-${maxPlayers}`)\n      .appendTo($overlay);\n    for (let i = 1; i <= maxPlayers; i += 1) {\n      this.selectorItems[i] = $('<div class=\"item\" />')\n        .addClass(`item-${i}`)\n        .toggleClass('selected', this.selectedNumber === i)\n        .text(i)\n        .appendTo($selector);\n    }\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    const { maxPlayers } = this.game.config;\n\n    let newSelection = null;\n    if (inputs.find((ctrl, i) => (\n      ctrl.direction === -1 && lastInputs[i].direction !== -1))) {\n      newSelection = Math.max(1, this.selectedNumber - 1);\n    } else if (inputs.find((ctrl, i) => (\n      ctrl.direction === 1 && lastInputs[i].direction !== 1))) {\n      newSelection = Math.min(maxPlayers, this.selectedNumber + 1);\n    }\n\n    if (newSelection && newSelection !== this.selectedNumber) {\n      this.selectorItems[this.selectedNumber].removeClass('selected');\n      this.selectorItems[newSelection].addClass('selected');\n      this.selectedNumber = newSelection;\n    }\n\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.game.numPlayers = this.selectedNumber;\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n    // Move boats\n    // Draw bottom\n    // etc...\n  }\n}\n","import GameMode from './game-mode';\nimport terrain from './terrain';\nimport * as waves from './waves';\n\nconst WATER_HEIGHT_SCALE = 10;\nconst NUM_WATER_POINTS = 300;\nconst WATER_DISTANCE = 200;\nconst WATER_LOOP_DURATION = 20 * 1000;\n\nconst BOAT_DRAFT = 18;\n\nconst TERRAIN_HEIGHT_SCALE = 300;\nconst NUM_TERRAIN_POINTS = 300;\nconst MAX_TERRAIN_EXTREMA = 20;\nconst TERRAIN_MARGIN_WIDTH = 0.1;\nconst TERRAIN_DISTANCE = 300;\n\n// How far should the boat move on user input per ms\nconst SPEED_FACTOR = 0.2 / 1000.0;\n\nconst PROBE_SIZE = 10;\nconst PROBE_DISTANCE_AT_REST = 0.3;\nconst PROBE_MIN_DURATION = 500;\nconst PROBE_DELAY = 500;\n\nconst TANGENT_LENGTH = 0.02;\n\nconst TREASURE_SIZE = 0.03;\n\nconst UNCOVER_DURATION = 2000;\nconst ENDING_SEQUENCE_DELAY = 0;\nconst ENDING_SEQUENCE_TREASURE_DELAY = 1000;\n\nexport default class PlayMode extends GameMode {\n\n  constructor(game) {\n    super(game);\n    const wavesPoints = Array(NUM_WATER_POINTS).fill(null);\n    this.wavesPoints = t => waves.points(wavesPoints, t, game.draw.width(), WATER_HEIGHT_SCALE);\n  }\n\n  async preLoadAssets() {\n    this.shipSymbol = await this.game.loadSVGSymbol('assets/img/ship.svg');\n    this.shipSymbol.attr({ overflow: 'visible' });\n    this.treasureClosedSymbol = await this.game.loadSVGSymbol('assets/img/treasure-closed.svg');\n    this.treasureClosedSymbol.attr({ overflow: 'visible' });\n    this.treasureOpenedSymbol = await this.game.loadSVGSymbol('assets/img/treasure-opened.svg');\n    this.treasureOpenedSymbol.attr({ overflow: 'visible' });\n  }\n\n  async handleEnterMode() {\n    const { draw, numPlayers } = this.game;\n\n    const modeGroup = draw.group()\n      .addClass('play')\n      .addClass('draw')\n      .translate(0, WATER_DISTANCE);\n\n    // Create a boat for each player\n    this.players = Array(numPlayers)\n      .fill(null)\n      .map((_, playerIndex) => {\n        const x = (playerIndex + 1) / (numPlayers + 1);\n        const group = modeGroup.group();\n        group\n          .addClass(`player-${playerIndex}`)\n          .transform({ translateX: x * draw.width() });\n\n        const boat = group.use(this.shipSymbol)\n          .center(0, BOAT_DRAFT);\n\n        const probeParent = group.group();\n        const probe = probeParent.group();\n        probe.line(0, -draw.height(), 0, -PROBE_SIZE / 2);\n        probe.circle(PROBE_SIZE).center(0, 0);\n        probe.transform({ translateY: TERRAIN_DISTANCE * PROBE_DISTANCE_AT_REST });\n\n        // Clip the probe such that only the part below the boat is visible.\n        const probeClip = probeParent.rect(PROBE_SIZE * 4, draw.height())\n          .move(-PROBE_SIZE * 2, BOAT_DRAFT);\n        probeParent.clipWith(probeClip);\n\n        return {\n          id: playerIndex,\n          group: group,\n          boat: boat,\n          probe: probe,\n          x: x,\n          flipX: false,\n          probing: false,\n        };\n      });\n\n    this.water = modeGroup.group()\n      .polyline(this.wavesPoints(0))\n      .addClass('water');\n\n    this.groundGroup = modeGroup.group();\n    const terrainOptions = { marginWidth: TERRAIN_MARGIN_WIDTH };\n    const terrainHeights = terrain(MAX_TERRAIN_EXTREMA, NUM_TERRAIN_POINTS, terrainOptions);\n    const terrainPoints = terrainHeights.map((h, i) => [\n      draw.width() * (i / (terrainHeights.length - 1)),\n      TERRAIN_HEIGHT_SCALE * h,\n    ]);\n    this.terrainHeights = terrainHeights;\n    this.treasureLocation = this.locateTreasure();\n    console.log(\"Treasure location:\", this.treasureLocation);\n\n    const behindGroundGroup = this.groundGroup.group();\n    const treasure = behindGroundGroup.group()\n      .addClass('treasure')\n      .transform({\n        translateX: this.treasureLocation.x * draw.width(),\n        translateY: TERRAIN_DISTANCE + this.treasureLocation.y * TERRAIN_HEIGHT_SCALE,\n      });\n    this.treasureClosed = treasure.use(this.treasureClosedSymbol);\n    this.treasureOpened = treasure.use(this.treasureOpenedSymbol).hide();\n\n\n    this.ground = this.groundGroup.polyline(terrainPoints)\n      .addClass('ground')\n      .translate(0, TERRAIN_DISTANCE)\n      .hide();\n\n    behindGroundGroup.clipWith(this.groundGroup.use(this.ground));\n\n    this.groundClip = this.groundGroup.clip();\n    this.groundGroup.clipWith(this.groundClip);\n\n    this.tangents = modeGroup.group()\n      .translate(0, TERRAIN_DISTANCE);\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    // Move the boats or check if they're lowering the probe\n    const { draw, numPlayers } = this.game;\n    inputs\n      .slice(0, numPlayers) // discard inputs that don't belong to an active player\n      .forEach((input, playerIndex) => {\n        const player = this.players[playerIndex];\n        if (!player.probing) {\n          player.x += SPEED_FACTOR * (delta * input.direction);\n          player.x = Math.min(Math.max(TERRAIN_MARGIN_WIDTH, player.x), 1.0 - TERRAIN_MARGIN_WIDTH);\n          player.flipX = input.direction === 0 ? player.flipX : input.direction === -1;\n          if (input.action && !lastInputs[playerIndex].action) {\n            // Switch to probe mode\n            player.probing = true;\n            // Lower the probe, wait and raise it again\n            const terrainHeight = this.terrainHeight(player.x);\n            const probeHeight = TERRAIN_DISTANCE + TERRAIN_HEIGHT_SCALE * terrainHeight;\n            const probeDuration = probeHeight * (PROBE_MIN_DURATION / TERRAIN_DISTANCE);\n            const runnerDown = player.probe\n              .animate(probeDuration, 0, 'now')\n              .transform({ translateY: probeHeight })\n              .after(() => this.addGroundClip(player.x))\n              .after(() => this.addTangent(player));\n            const runnerUp = runnerDown.animate(probeDuration, PROBE_DELAY)\n              .transform({ translateY: TERRAIN_DISTANCE * PROBE_DISTANCE_AT_REST })\n              .after(() => player.probing = false);\n            if (Math.abs(player.x - this.treasureLocation.x) <= TREASURE_SIZE / 2) {\n              runnerDown.after(() => this.uncoverGround());\n              runnerUp.after(() => this.showGameOverSequence(player));\n            }\n\n            console.log(`Player ${playerIndex} is probing at:`, { x: player.x, y: terrainHeight });\n          }\n        }\n      });\n  }\n\n  draw(delta, ts) {\n    const { draw, numPlayers } = this.game;\n    // Move boats\n    // Draw bottom\n    // etc...\n\n    this.water.plot(this.wavesPoints(ts / WATER_LOOP_DURATION));\n\n    this.players.forEach((player, playerIndex) => {\n      const x = player.x;\n      const y = WATER_HEIGHT_SCALE * waves.height(x, ts / WATER_LOOP_DURATION);\n      const slope = WATER_HEIGHT_SCALE * waves.slope(x, ts / WATER_LOOP_DURATION);\n      const angle = 0.25 * 180 * Math.atan2(slope, draw.width()) / Math.PI;\n      const boatTransform = {\n        rotate: angle,\n      };\n      if (player.flipX)\n        boatTransform.flip = 'x';\n      player.boat.transform(boatTransform);\n      player.group.transform({\n        translateX: x * draw.width(),\n        translateY: y\n      });\n    });\n  }\n\n  terrainHeight(x) {\n    return this.terrainHeightExt(x).value;\n  }\n\n  terrainHeightExt(x) {\n    const xInArray = (this.terrainHeights.length - 1) * x;\n    const tmpIndex = Math.floor(xInArray);\n    const i0 = tmpIndex === this.terrainHeights.length - 1 ? tmpIndex - 1 : tmpIndex;\n    const i1 = i0 + 1;\n    const h0 = this.terrainHeights[i0];\n    const h1 = this.terrainHeights[i1];\n    const t = xInArray - i0;\n    return {\n      value: h0 + t * (h1 - h0),\n      slope: (h1 - h0) * (this.terrainHeights.length - 1),\n    };\n  }\n\n  locateTreasure() {\n    const argmax = array => [].reduce.call(array, (m, c, i, arr) => c > arr[m] ? i : m, 0);\n    const treasureIndex = argmax(this.terrainHeights);\n    return {\n      x: treasureIndex / (this.terrainHeights.length - 1),\n      y: this.terrainHeights[treasureIndex],\n    };\n  }\n\n  addTangent(player) {\n    const { draw } = this.game;\n    const width = draw.width();\n    const { value, slope } = this.terrainHeightExt(player.x);\n    const angle = 180 * Math.atan2(slope * TERRAIN_HEIGHT_SCALE, width) / Math.PI;\n    this.tangents.line(-width * TANGENT_LENGTH / 2, 0, width * TANGENT_LENGTH / 2, 0,)\n      .addClass(`player-${player.id}`)\n      .transform({\n        translateX: width * player.x,\n        translateY: TERRAIN_HEIGHT_SCALE * value,\n        rotate: angle,\n      });\n  }\n\n  addGroundClip(x) {\n    const { draw } = this.game;\n    const w = draw.width();\n    const h = draw.height();\n    const rect = this.groundClip\n      .polygon([[-w, -h], [w, -h], [w, h], [-w, h]])\n      .center(draw.width() * x, 0)\n      .transform({ scaleX: 0.001 });\n    this.groundClip.add(rect);\n  }\n\n  async uncoverGround() {\n    const { draw } = this.game;\n    this.ground.show();\n    const treasureSpotlight = this.groundClip.circle(2 * TREASURE_SIZE * draw.width())\n      .center(\n        draw.width() * this.treasureLocation.x,\n        TERRAIN_DISTANCE + TERRAIN_HEIGHT_SCALE * this.treasureLocation.y\n      );\n\n    // Move the treasure spotlight up a bit so it doesn't point at the treasure location on the\n    // curve, but rather at the treasure chest\n    treasureSpotlight.dy(-2 * 0.3 * TREASURE_SIZE * draw.width());\n\n    const uncoverGround = clip => new Promise(resolve => {\n      clip.animate(UNCOVER_DURATION)\n        .ease(pos => -(Math.sqrt(1 - (pos * pos)) - 1))\n        .transform({ scaleX: 1.0 })\n        .after(resolve);\n    });\n    return Promise.all(this.groundClip.children().map(uncoverGround));\n  }\n\n  async showGameOverSequence(winner) {\n    const { draw } = this.game;\n    const $overlay = $(this.game.overlay);\n\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n    const treasureAnnouncement = IMAGINARY.i18n.t('treasure-announcement-begin')\n      + (winner.id + 1)\n      + IMAGINARY.i18n.t('treasure-announcement-end');\n    const randomElement = arr => arr[Math.floor(Math.random() * (arr.length - 1))];\n    const treasureString = randomElement(IMAGINARY.i18n.t('treasures'));\n\n    const $treasureAnnouncement = $(\"<div>\").text(treasureAnnouncement);\n    const $treasureString = $(\"<div>\").text(treasureString).css(\"visibility\", \"visible\")\n      .css('visibility', 'hidden');\n\n    const $inner = $(`<div class=\"ending-sequences-text player-${winner.id}\" />`)\n      .append([$treasureAnnouncement, $treasureString]);\n\n    const left = 100 * this.treasureLocation.x;\n    const bottom = 100 - 100 * (WATER_DISTANCE + TERRAIN_DISTANCE) / draw.height();\n    const $outer = $('<div class=\"ending-sequences-text-container\">')\n      .css({ left: `${left}%`, bottom: `${bottom}%` })\n      .append($inner);\n\n    await delay(ENDING_SEQUENCE_DELAY);\n    $overlay.empty().append($outer);\n\n    await delay(ENDING_SEQUENCE_TREASURE_DELAY);\n    $treasureString.css(\"visibility\", \"visible\");\n    this.treasureOpened.show();\n    this.treasureClosed.hide();\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\nimport WavyAnimation from './wavy-animation';\n\nexport default class TitleMode extends GameMode {\n  async preLoadAssets() {\n    this.logoSprite = await this.game.loadSVGSymbol('assets/img/descent-logo.svg');\n    this.poly = this.logoSprite.findOne('#descent');\n  }\n\n  async handleEnterMode() {\n    const { draw } = this.game;\n    const pressToStart = document.createElement('div');\n    pressToStart.classList.add('blinking', 'text', 'text-center', 'text-vcenter');\n    pressToStart.textContent = IMAGINARY.i18n.t('press-to-start');\n    this.game.overlay.append(pressToStart);\n\n    const gradientLogo = draw.use(this.logoSprite)\n      .size(1200, 400)\n      .stroke({ color: '#00368a', width: 2 })\n      .fill('transparent')\n      .center(1920 / 2, 1080 / 2.5);\n\n    gradientLogo.animate({ duration: 5000 }).stroke({ color: '#34c6ff' });\n    this.wavyStep = WavyAnimation(this.logoSprite, { duration: 3500 });\n\n    this.animCounter = 0;\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts0) {\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n\n    this.wavyStep(delta, ts);\n  }\n}\n","/* eslint-disable class-methods-use-this,no-unused-vars,no-empty-function */\nimport EventEmitter from 'events';\n\n/**\n * Abstract class for GameMode\n *\n * A GameMode does the actual handling of the input and drawing\n */\nexport default class GameMode {\n  /**\n   * Constructor\n   *\n   * @param {GradientDescentGame} game\n   */\n  constructor(game) {\n    // noinspection JSUnusedGlobalSymbols\n    this.game = game;\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Preload any external assets that will be needed during the game\n   *\n   * This method runs during game initialization.\n   * @return {Promise<void>}\n   */\n  async preLoadAssets() {\n\n  }\n\n  /**\n   * Called by the game when the mode is entered.\n   *\n   * Can be used to add DOM elements, event handlers and initialize\n   * internal state. Anything done here must be cleaned up in\n   * handleExitMode.\n   */\n  async handleEnterMode() {\n\n  }\n\n  /**\n   * Called by the game when the mode is going to be exited\n   *\n   * Should be used to remove DOM elements, event handlers\n   * or anything else that was created on handleEnterMode.\n   */\n  async handleExitMode() {\n\n  }\n\n  /**\n   * Called once per frame so the mode can handle controller input\n   *\n   * Current input state and the previous one are passed\n   * to help with state change detection.\n   *\n   * Both are arrays with N objects with shape:\n   * - direction {integer}: Either -1, 0 or 1.\n   * - action {bool}\n   *\n   * @param {[{direction: Number, action: Boolean}]} inputs\n   * @param {[{direction: Number, action: Boolean}]} lastInputs\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n\n   *\n   */\n  handleInputs(inputs, lastInputs, delta, ts) {\n\n  }\n\n  /**\n   * Called once per frame so the mode can draw based on the game's state\n   *\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n   */\n  draw(delta, ts) {\n\n  }\n\n  /**\n   * Triggers an event for the game to handle\n   *\n   * Events can be used to transition to another mode, etc.\n   *\n   * @param {string} name\n   */\n  triggerEvent(name) {\n    this.events.emit(name);\n  }\n}\n","/* globals SVG */\nimport PlayMode from './game-mode-play';\nimport TitleMode from './game-mode-title';\nimport PlayerNumberMode from './game-mode-numplayers';\nimport GamepadControls from \"./controls/gamepad\";\nimport ScreenControls from './controls/screen';\nimport KeyboardControls from \"./controls/keyboard\";\n\n/**\n * The main application\n *\n * This class creates the main UI elements and runs the\n * main game loop (read input, draw).\n *\n * The game can be in one of various modes (see GameMode)\n * which decides how to draw and process input.\n */\nexport default class GradientDescentGame {\n  constructor(container, config) {\n    this.container = container;\n    this.config = config;\n\n    this.inputs = this.createInputs();\n    this.inputsLast = this.createInputs();\n\n    this.gameLoop = null;\n    this.isPaused = false;\n    this.modes = {};\n    this.currentMode = null;\n\n    this.controls = {};\n    this.debugControlsPane = null;\n\n    this.numPlayers = this.config.maxPlayers;\n  }\n\n  /**\n   * Initializes the app and downloads any external assets\n   *\n   * @return {Promise<void>}\n   */\n  async init() {\n    const [width, height] = [1920, 864];\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n\n    const viewContainer = document.createElement('div');\n    viewContainer.classList.add('game-view');\n    this.container.append(viewContainer);\n\n    this.svgDoc = SVG().addTo(viewContainer);\n    this.svgDoc\n      .viewbox(0, 0, width, height)\n      .attr('preserveAspectRatio', 'xMinYMin meet');\n\n    this.draw = this.svgDoc.nested().size(width, height);\n\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n    this.container.append(this.overlay);\n\n    if (this.config.useScreenControls) {\n      this.controls.screen = new ScreenControls(this.config.maxPlayers);\n      this.container.appendChild(this.controls.screen.element);\n    }\n\n    if (this.config.useGamepads) {\n      this.controls.gamepad = new GamepadControls(this.config.maxPlayers);\n    }\n    if (this.config.useKeyboardControls) {\n      this.controls.keyboard = new KeyboardControls(this.config.maxPlayers);\n    }\n\n    if (this.config.debugControls) {\n      this.debugControlsPane = document.createElement('div');\n      this.debugControlsPane.classList.add('debug-pane');\n      this.debugControlsPane.classList.add('debug-pane-controls');\n      this.container.appendChild(this.debugControlsPane);\n    }\n\n    await this.registerMode('title', new TitleMode(this));\n    await this.registerMode('numplayers', new PlayerNumberMode(this));\n    await this.registerMode('play', new PlayMode(this));\n\n    if (this.config.continuousGame) {\n      this.transition('play', 'done', 'play');\n      await this.setMode('play');\n    } else {\n      this.transition('title', 'done',\n        this.config.maxPlayers > 1 ? 'numplayers' : 'play');\n      this.transition('numplayers', 'done', 'play');\n      this.transition('play', 'done', 'title');\n      await this.setMode('title');\n    }\n  }\n\n  /**\n   * Loads an external SVG file into a symbol within the main svg element\n   *\n   * @param {string} uri\n   * @param {boolean} clearStyles\n   *  If true removes the style elements from the file\n   * @return {Promise<SVG.Symbol>}\n   */\n  async loadSVGSymbol(uri, clearStyles = true) {\n    const response = await fetch(uri);\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`Server returned status ${response.status} (${response.statusText}) loading ${uri}.`);\n    }\n    const newSymbol = this.svgDoc.symbol().svg(await response.text());\n    if (clearStyles) {\n      newSymbol.find('style').forEach(s => s.remove());\n    }\n\n    return newSymbol;\n  }\n\n  /**\n   * Initializes the input state\n   *\n   * @private\n   */\n  initInputs() {\n    this.inputs = this.createInputs();\n  }\n\n  createInputs() {\n    return Array(this.config.maxPlayers)\n      .fill(null)\n      .map(() => ({ direction: 0, action: false }));\n  }\n\n  /**\n   * Reads the input state from all enabled controller types\n   *\n   * Loads the new input state in this.input and the previous\n   * state in this.inputLast.\n   *\n   * @private\n   */\n  readInputs() {\n    this.inputsLast = this.inputs;\n    const states = Object.values(this.controls).map(c => c.getStates());\n    const inputReducer = (accInput, curState) => ({\n      direction: curState.right ? 1 : (curState.left ? -1 : accInput.direction),\n      action: curState.action || accInput.action,\n    });\n    this.inputs = this.createInputs().map(\n      (input, i) => states.map(s => s[i]).reduce(inputReducer, input)\n    );\n\n    if (this.debugControlsPane) {\n      this.debugControlsPane.textContent = this.inputs.map((ctrl, i) => (\n        `C${i}: d=${ctrl.direction} a=${ctrl.action ? 'T' : 'F'}`\n      )).join('\\u00a0\\u00a0\\u00a0\\u00a0'); // four &nbsp;\n    }\n  }\n\n  /**\n   * Game loop\n   */\n  run() {\n    if (!this.gameLoop) {\n      let lastTs = 0;\n      let lag = 0;\n      const MAX_DELTA = 125;\n\n      this.gameLoop = (ts) => {\n        if (!this.isPaused) {\n          this.readInputs();\n          lag += Math.max(0, (ts - lag) - lastTs - MAX_DELTA);\n          ts -= lag;\n          const delta = ts - lastTs;\n          this.currentMode.handleInputs(this.inputs, this.inputsLast, delta, ts);\n          this.currentMode.draw(delta, ts);\n          lastTs = ts;\n\n          window.requestAnimationFrame(this.gameLoop);\n        }\n      };\n    }\n    window.requestAnimationFrame(this.gameLoop);\n  }\n\n  /**\n   * Pauses the game.\n   *\n   * While paused the main game loop not run.\n   */\n  pause() {\n    this.isPaused = true;\n  }\n\n  /**\n   * Resumes the game.\n   *\n   * Enables the main game loop.\n   */\n  resume() {\n    if (this.isPaused) {\n      this.isPaused = false;\n      this.run();\n    }\n  }\n\n  /**\n   * Registers a game mode\n   *\n   * @private\n   * @param {string} id\n   *  A name that identifies the mode\n   * @param {GameMode} mode\n   *  A GameMode subclass\n   * @return {Promise<void>}\n   */\n  async registerMode(id, mode) {\n    this.modes[id] = mode;\n    await mode.preLoadAssets();\n  }\n\n  /**\n   * Changes the current game mode\n   *\n   * @param {string} modeID\n   *  Name of a previously registered mode\n   * @return {Promise<void>}\n   */\n  async setMode(modeID) {\n    this.pause();\n\n    if (this.currentMode) {\n      await this.currentMode.handleExitMode();\n    }\n    if (this.modes[modeID] === undefined) {\n      throw new Error(`Can't change to unknown mode ${modeID}`);\n    }\n    this.currentMode = this.modes[modeID];\n    this.draw.clear();\n    this.overlay.innerHTML = '';\n    await this.currentMode.handleEnterMode();\n\n    this.resume();\n  }\n\n  transition(modeId, event, nextModeId = null, callback = null) {\n    if (this.modes[modeId] === undefined) {\n      throw new Error(`Can't define transition from unknown game mode '${modeId}'`);\n    }\n    if (nextModeId && this.modes[nextModeId] === undefined) {\n      throw new Error(`Can't define transition to unknown game mode '${nextModeId}'`);\n    }\n    this.modes[modeId].events.on(event, () => {\n      if (this.currentMode !== this.modes[modeId]) {\n        throw new Error(`Mode ${modeId} triggered the event ${event} while not active. Something was not cleaned up?`);\n      }\n      if (nextModeId !== null) {\n        this.setMode(nextModeId);\n      }\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  }\n}\n","/* globals IMAGINARY */\nimport GradientDescentGame from './game';\n\nconst defaultConfig = {\n  defaultLanguage: 'en',\n  useGamepads: true,\n  useScreenControls: true,\n  maxPlayers: 2,\n  continuousGame: false,\n  debugControls: false,\n};\n\n/**\n * Loads the config file from an external JSON file\n *\n * @param {String} uri\n * @return {Promise<any>}\n */\nasync function loadConfig(uri) {\n  const response = await fetch(uri);\n  if (response.status >= 200 && response.status < 300) {\n    try {\n      return await response.json();\n    } catch (e) {\n      throw new Error(`Error parsing config file: ${e.message}`);\n    }\n  }\n  throw new Error(`Server returned status ${response.status} (${response.statusText}) loading config file.`);\n}\n\n/**\n * Load config files and start the program\n */\n(async function main() {\n  try {\n    const config = Object.assign({}, defaultConfig, await loadConfig('./config.json'));\n    await IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage: config.defaultLanguage || 'en',\n    });\n    // eslint-disable-next-line no-unused-vars\n    const game = new GradientDescentGame(\n      document.querySelector('.main'),\n      config\n    );\n    window.game = game;\n    await game.init();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}());\n","function smoothChaikin(arr, num, open = true) {\n  if (num === 0)\n    return arr;\n\n  const l = arr.length;\n  const smooth = arr.map((c, i) => [\n    [0.75 * c[0] + 0.25 * arr[(i + 1) % l][0], 0.75 * c[1] + 0.25 * arr[(i + 1) % l][1]],\n    [0.25 * c[0] + 0.75 * arr[(i + 1) % l][0], 0.25 * c[1] + 0.75 * arr[(i + 1) % l][1]]\n  ]).flat();\n\n  if (open) {\n    smooth.length -= 1;\n    smooth[0] = arr[0];\n    smooth[smooth.length - 1] = arr[arr.length - 1];\n  }\n\n  return smoothChaikin(smooth, num - 1, open);\n}\n\nfunction subdivide(length, leftHeight, rightHeight) {\n  return {\n    index: Math.floor(length * Math.random()),\n    height: Math.max(leftHeight, rightHeight) * Math.random(),\n  };\n}\n\nfunction generateInnerTerrainHeights(heights, leftHeight, rightHeight) {\n  if (heights.length > 0) {\n    const { index, height } = subdivide(heights.length, leftHeight, rightHeight);\n    heights[index] = height;\n    generateInnerTerrainHeights(heights.subarray(0, index), leftHeight, height);\n    generateInnerTerrainHeights(heights.subarray(index + 1, heights.length),\n      height,\n      rightHeight);\n  }\n  return heights;\n}\n\nfunction generateTerrainPoints(numPoints, marginWidth = 0.1, marginHeight = 0.2, jitter = 0.25) {\n  const heights = new Float32Array(numPoints);\n  const marginIndices = [\n    Math.floor(marginWidth * numPoints),\n    Math.floor(marginWidth + (1 - 2 * marginWidth) * numPoints),\n  ];\n  const predefinedHeights = [\n    [0, Math.random() * marginHeight],\n    [marginIndices[0], marginHeight],\n    [marginIndices[0] + 1 + Math.floor(Math.random() * (marginIndices[1] - marginIndices[0])),\n     1.0],\n    [marginIndices[1], marginHeight],\n    [numPoints - 1, Math.random() * marginHeight],\n  ];\n\n  if (numPoints > 0) {\n    predefinedHeights.forEach(([i, h]) => heights[i] = h);\n    predefinedHeights.reduce(([i0, h0], [i1, h1]) => {\n      generateInnerTerrainHeights(heights.subarray(i0 + 1, i1), h0, h1);\n      return [i1, h1];\n    });\n  }\n\n  // restrict jitter range to prevent points from switching their order\n  jitter = Math.max(0.0, Math.min(jitter, 1.0));\n\n  return new Array(heights.length)\n    .fill(null)\n    .map((_, i) => [\n      (i + jitter * (Math.random() - 0.5)) / (heights.length - 1),\n      heights[i]\n    ]);\n}\n\nfunction convertPointsToHeights(points, numHeights) {\n  const left = points[0][0];\n  const right = points[points.length - 1][0];\n  const width = right - left;\n  const heights = Array(numHeights);\n  let j = 0;\n  for (let i = 0; i < heights.length - 1; ++i) {\n    while (i >= (numHeights - 1) * (points[j][0] - left) / width) {\n      ++j;\n    }\n    const t = (left + ((i / (numHeights - 1)) * width) - (points[j - 1][0]))\n      / (points[j][0] - points[j - 1][0]);\n    heights[i] = points[j - 1][1] + (points[j][1] - points[j - 1][1]) * t;\n  }\n  heights[heights.length - 1] = points[points.length - 1][1];\n  return heights;\n}\n\nconst defaultOptions = {\n  marginWidth: 0.1,\n  marginHeight: 0.1,\n  jitter: 0.25,\n  smoothing: 6,\n};\n\nexport default function terrain(numSamples, length, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  const roughTerrainPoints = generateTerrainPoints(\n    numSamples,\n    options.marginWidth,\n    options.marginHeight,\n    options.jitter\n  );\n  const smoothTerrainPoints = smoothChaikin(roughTerrainPoints, options.smoothing);\n  const smoothTerrainHeights = convertPointsToHeights(smoothTerrainPoints, length);\n  return smoothTerrainHeights;\n}\n","// The water surface consists of superimposed sin waves that are moving with respect to ts.\n// Fixing x, the frequency factors with respect to ts are [1,-1,2,3].\n// Since the lowest common denominator of these factors is 6 and the base frequency is 1 / (2 * PI),\n// the period of the water animation is 6 / (1 / (2 * PI)) = 12 * PI.\nconst PERIOD = 12 * Math.PI;\n\nexport function height(x, t) {\n  t = (t * PERIOD) % PERIOD;\n  return (\n    Math.sin(x * 100 + t)\n    + Math.sin(x * 50 - 1 * t)\n    + Math.sin(x * 30 + 2 * t)\n    + Math.sin(x * 10 - 3 * t)\n  ) / 4;\n}\n\nexport function slope(x, t) {\n  t = (t * PERIOD) % PERIOD;\n  return (\n    100 * Math.cos(100 * x + t)\n    + 50 * Math.cos(50 * x - t)\n    + 30 * Math.cos(30 * x + 2 * t)\n    + 10 * Math.cos(10 * x - 3 * t)\n  ) / 4;\n}\n\nexport function heights(arr, t, xScale = 1.0, yScale = 1.0) {\n  arr.forEach((_, i) => arr[i] = height(i / (arr.length - 1), t));\n  return arr;\n}\n\nexport function points(arr, t, xScale = 1.0, yScale = 1.0) {\n  arr.forEach((_, i) => {\n    const x = i / (arr.length - 1);\n    arr[i] = [xScale * x, yScale * height(x, t)];\n  });\n  return arr;\n}\n\n/*\n * Experimental: Create an SVG wave shape that animates via the <animate> tag.\n * This will probably doesn't work in a lot of browsers.\n * Problems: It's not possible to the the timestamp (progress) of the animation,\n * which would be needed to keep it in sync with other elements in the scene.\n */\nexport function animatedSVG(svgContainer, numPoints, numSteps, xScale, yScale, duration) {\n  const p = Array(numPoints).fill(null);\n  const keyframes = Array(numSteps)\n    .fill(null)\n    .map((_, i) => Array.from(points(p, i / (numSteps - 1), xScale, yScale)));\n  const waves = svgContainer.polyline(keyframes[0]);\n  const keyframesSvg = keyframes.map(p => waves.plot(p).attr('points'));\n  const keyframesString = keyframesSvg.join(';\\n').replace(/;[[:space:]]*;]/g, ';');\n  const animate = waves.element('animate');\n  animate.attr({\n    attributeName: 'points',\n    dur: `${duration}ms`,\n    repeatCount: 'indefinite',\n    values: keyframesString,\n  });\n\n  return waves;\n}\n\n","/**\n * Setup a wave-like animation for an svg.js shape made up of polygons.\n *\n * This animation works by applying a transformation on all points of\n * all polygons of the passed shape. The points will move on a sine wave\n * that is continuously phase shifting and whose amplitude decreases over time.\n *\n * Returns a stepping function that takes a delta in milliseconds which should\n * be called on the frame rendering function.\n *\n * Options:\n * - xAmplitude: Maximum distance that the x coordinates are shifted from their\n *   starting position.\n * - duration: Duration of the animation\n * - cycles: Number of cycles of phase shifting.\n *\n * @param {SVG.Container} shape\n *  The shape whose polygons will be animated\n * @param {Object} userOptions\n *  Options (see above)\n * @return {function(...[*]=)}\n *  Returns an animation callback that takes a delta.\n */\nexport default function WavyAnimation(shape, userOptions = {}) {\n  const defaultOptions = {\n    xAmplitude: 50,\n    duration: 5000,\n    cycles: 3,\n  };\n\n  const options = Object.assign({}, defaultOptions, userOptions);\n  const polygons = shape.find('polygon');\n  const originalPlots = polygons.map(p => p.plot());\n  const maxY = Math.max(...originalPlots.flat().map(([, y]) => y));\n\n  let counter = 0;\n\n  return (delta, ts) => {\n    if (counter > options.duration) {\n      return;\n    }\n    counter += delta;\n    const progress = Math.min(counter, options.duration) / options.duration;\n    polygons.forEach((p, i) => {\n      p.plot(originalPlots[i].map(([x, y]) => (\n        [\n          x + Math.sin((y / maxY + progress * options.cycles) * Math.PI * 2)\n          * options.xAmplitude * (1 - (progress ** 2)),\n          y,\n        ]\n      )));\n    });\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n"]}