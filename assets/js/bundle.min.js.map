{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/controls/controls.js","js/controls/gamepad.js","js/controls/keyboard.js","js/controls/screen.js","js/game-mode-numplayers.js","js/game-mode-play.js","js/game-mode-title.js","js/game-mode.js","js/game.js","js/main.js","js/terrain.js","js/waves.js","js/wavy-animation.js","node_modules/events/events.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Controls","count","_classCallCheck","this","states","Array","fill","map","_","left","right","action","statesModified","id","key","value","result","s","Object","assign","_controls","GamepadControls","_super","_this","_toConsumableArray","from","navigator","getGamepads","filter","gp","index","forEach","modifyState","axes","buttons","pressed","updateState","_get","_getPrototypeOf","prototype","keyMap","ArrowLeft","prop","ArrowRight","ArrowDown","KeyA","KeyD","KeyS","KeyboardControls","keyCallback","ev","type","window","addEventListener","ScreenControls","element","document","createElement","classList","add","concat","appendChild","buildControl","mousePressedButton","name","remove","_this2","root","newButton","button","checkTouches","targetTouches","preventDefault","setAttribute","passive","_gameMode","PlayerNumberMode","$overlay","$","game","overlay","maxPlayers","config","selectedNumber","selectorItems","text","IMAGINARY","i18n","appendTo","$selector","addClass","toggleClass","inputs","lastInputs","newSelection","find","ctrl","direction","Math","max","min","removeClass","numPlayers","triggerEvent","_interopRequireDefault","_terrain","waves","_interopRequireWildcard","PlayMode","wavesPoints","ts","points","loadSVGSymbol","shipSymbol","draw","group","translate","boats","use","boat","playerIndex","size","center","width","water","polyline","scale","terrainOptions","marginWidth","terrainHeights","terrainPoints","h","ground","delta","_this3","_this$game2","leftMargin","rightMargin","slice","input","cx","attr","data-flip","_this$game3","plot","x","y","height","slope","transform","translateY","rotate","atan2","PI","flip","_wavyAnimation","TitleMode","logoSprite","poly","findOne","pressToStart","textContent","append","stroke","color","animate","duration","wavyStep","animCounter","_events","GameMode","events","emit","_gameModePlay","_gameModeTitle","_gameModeNumplayers","_gamepad","_screen","_keyboard","GradientDescentGame","container","createInputs","inputsLast","isPaused","modes","currentMode","controls","debugControlsPane","svgDoc","SVG","addTo","nested","useScreenControls","screen","useGamepads","gamepad","useKeyboardControls","keyboard","debugControls","registerMode","continuousGame","transition","setMode","uri","clearStyles","fetch","response","status","statusText","symbol","newSymbol","svg","inputReducer","accInput","curState","values","getStates","reduce","join","lastTs","lag","requestAnimationFrame","gameLoop","readInputs","handleInputs","run","mode","preLoadAssets","modeID","pause","handleExitMode","undefined","clear","innerHTML","handleEnterMode","resume","modeId","event","nextModeId","arguments","callback","on","_game","_main","defaultConfig","defaultLanguage","loadConfig","_callee2","regeneratorRuntime","wrap","_context2","prev","next","sent","json","abrupt","t0","message","stop","_asyncToGenerator","mark","_callee","_context","t1","t2","t3","init","queryStringVariable","translationsDirectory","querySelector","t4","console","error","apply","numSamples","options","defaultOptions","numHeights","heights","j","convertPointsToHeights","smoothChaikin","arr","num","open","l","smooth","flat","numPoints","marginHeight","jitter","Float32Array","marginIndices","floor","predefinedHeights","random","_ref","_ref2","_slicedToArray","_ref3","_ref4","_ref5","i0","h0","_ref6","i1","h1","generateInnerTerrainHeights","leftHeight","rightHeight","_subdivide","subarray","generateTerrainPoints","smoothing","sin","cos","shape","userOptions","xAmplitude","cycles","polygons","originalPlots","maxY","counter","progress","pow","objectCreate","create","proto","F","objectKeys","keys","obj","k","hasOwnProperty","push","bind","Function","context","fn","EventEmitter","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","defineProperty","err","$getMaxListeners","that","_addListener","target","listener","prepend","m","existing","TypeError","newListener","unshift","warned","w","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","args","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","enumerable","get","set","arg","setMaxListeners","isNaN","getMaxListeners","er","handler","len","doError","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Component that handles gamepad controls\n *\n */\nexport default class Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to handle\n   */\n  constructor(count) {\n    this.states = Array(count)\n      .fill(null)\n      .map(_ => ({\n        left: false,\n        right: false,\n        action: false,\n      }));\n    this.statesModified = false;\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @protected\n   */\n  modifyState(id, key, value) {\n    if (this.states[id][key] !== value) {\n      this.states[id][key] = value;\n      this.statesModified = true;\n    }\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    if (this.statesModified) {\n      const result = this.states;\n      this.states = this.states.map(s => Object.assign({}, s)); // immutability: use cloned array for future changes\n      this.statesModified = false;\n      return result;\n    } else {\n      return this.states;\n    }\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles gamepad controls\n *\n */\nexport default class GamepadControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n  }\n\n  updateState() {\n    // clone the current state such state objects are immutable\n    this.states = [...this.states];\n    Array.from(navigator.getGamepads())\n      .filter(gp => gp !== null && gp.index < this.states.length)\n      .forEach(gp => {\n        this.modifyState(gp.index, \"left\", gp.axes[0] < -0.5);\n        this.modifyState(gp.index, \"right\", gp.axes[0] > 0.5);\n        this.modifyState(gp.index, \"action\", gp.buttons[1].pressed || gp.buttons[2].pressed);\n      });\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    this.updateState();\n    return super.getStates();\n  }\n}\n","import Controls from \"./controls\";\n\nconst keyMap = {\n  'ArrowLeft': { id: 0, prop: 'left' },\n  'ArrowRight': { id: 0, prop: 'right' },\n  'ArrowDown': { id: 0, prop: 'action' },\n  'KeyA': { id: 1, prop: 'left' },\n  'KeyD': { id: 1, prop: 'right' },\n  'KeyS': { id: 1, prop: 'action' },\n};\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class KeyboardControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n\n    const keyCallback = ev => {\n      const key = keyMap[ev.code];\n      if (key && key.id < count)\n        this.modifyState(key.id, key.prop, ev.type === 'keydown');\n    };\n\n    window.addEventListener('keydown', keyCallback);\n    window.addEventListener('keyup', keyCallback);\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class ScreenControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n    this.element = document.createElement('div');\n    this.element.classList.add('screen-controls');\n    this.element.classList.add(`with-${count}-controls`);\n\n    for (let i = 0; i < this.states.length; ++i)\n      this.element.appendChild(this.buildControl(i));\n\n    // Global mouseup handling for all buttons\n    this.mousePressedButton = null;\n    window.addEventListener('mouseup', () => {\n      if (this.mousePressedButton !== null) {\n        this.modifyState(this.mousePressedButton.id, this.mousePressedButton.name, false);\n        this.mousePressedButton.element.classList.remove('active');\n        this.mousePressedButton = null;\n      }\n    });\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @private\n   * @param {Number} id\n   *  Zero-based integer index of the controller\n   * @return {HTMLDivElement}\n   */\n  buildControl(id) {\n    const root = document.createElement('div');\n    root.classList.add('screen-control', `screen-control-${id}`);\n\n    const newButton = (name) => {\n      const button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.classList.add(name);\n\n      const checkTouches = (ev) => {\n        if (ev.targetTouches.length > 0) {\n          this.modifyState(id, name, true);\n          button.classList.add('active');\n        } else {\n          this.modifyState(id, name, false);\n          button.classList.remove('active');\n        }\n        ev.preventDefault();\n      };\n\n      button.addEventListener('touchstart', checkTouches, { passive: false });\n      button.addEventListener('touchmove', checkTouches, { passive: false });\n      button.addEventListener('touchend', checkTouches, { passive: false });\n      button.addEventListener('touchcancel', checkTouches, { passive: false });\n\n      button.addEventListener('mousedown', () => {\n        this.modifyState(id, name, true);\n        button.classList.add('active');\n        this.mousePressedButton = {\n          id,\n          name,\n          element: button,\n        };\n      });\n\n      return button;\n    };\n\n    root.appendChild(newButton('left'));\n    root.appendChild(newButton('action'));\n    root.appendChild(newButton('right'));\n\n    return root;\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\n\nexport default class PlayerNumberMode extends GameMode {\n  async preLoadAssets() {\n  }\n\n  async handleEnterMode() {\n    const $overlay = $(this.game.overlay);\n    const { maxPlayers } = this.game.config;\n\n    this.selectedNumber = 1;\n    this.selectorItems = {};\n    $('<div class=\"text text-center numPlayers-title\" />')\n      .text(IMAGINARY.i18n.t('choose-num-players'))\n      .appendTo($overlay);\n    const $selector = $('<div class=\"numPlayers-selector\" />')\n      .addClass(`numPlayers-selector-with-${maxPlayers}`)\n      .appendTo($overlay);\n    for (let i = 1; i <= maxPlayers; i += 1) {\n      this.selectorItems[i] = $('<div class=\"item\" />')\n        .addClass(`item-${i}`)\n        .toggleClass('selected', this.selectedNumber === i)\n        .text(i)\n        .appendTo($selector);\n    }\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    const { maxPlayers } = this.game.config;\n\n    let newSelection = null;\n    if (inputs.find((ctrl, i) => (\n      ctrl.direction === -1 && lastInputs[i].direction !== -1))) {\n      newSelection = Math.max(1, this.selectedNumber - 1);\n    } else if (inputs.find((ctrl, i) => (\n      ctrl.direction === 1 && lastInputs[i].direction !== 1))) {\n      newSelection = Math.min(maxPlayers, this.selectedNumber + 1);\n    }\n\n    if (newSelection && newSelection !== this.selectedNumber) {\n      this.selectorItems[this.selectedNumber].removeClass('selected');\n      this.selectorItems[newSelection].addClass('selected');\n      this.selectedNumber = newSelection;\n    }\n\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.game.numPlayers = this.selectedNumber;\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n    // Move boats\n    // Draw bottom\n    // etc...\n  }\n}\n","import GameMode from './game-mode';\nimport terrain from './terrain';\nimport * as waves from './waves';\n\nconst WATER_HEIGHT_SCALE = 10;\nconst NUM_WATER_POINTS = 300;\n\nconst TERRAIN_HEIGHT_SCALE = 300;\nconst NUM_TERRAIN_POINTS = 300;\nconst MAX_TERRAIN_EXTREMA = 20;\nconst TERRAIN_MARGIN_WIDTH = 0.1;\nconst TERRAIN_DISTANCE = 300;\n\nexport default class PlayMode extends GameMode {\n\n  constructor(game) {\n    super(game);\n    const wavesPoints = Array(NUM_WATER_POINTS).fill(null);\n    this.wavesPoints = ts => waves.points(wavesPoints, ts);\n  }\n\n  async preLoadAssets() {\n    this.shipSymbol = await this.game.loadSVGSymbol('assets/img/ship.svg');\n  }\n\n  async handleEnterMode() {\n    const { draw, numPlayers } = this.game;\n\n    const group = draw.group()\n      .addClass('play')\n      .translate(0, 200);\n\n    // Create a boat for each player\n    this.boats = Array(numPlayers)\n      .fill(null)\n      .map(() => group.use(this.shipSymbol));\n\n    // Set the boats properties\n    this.boats.forEach((boat, playerIndex) => boat.size(300, 200)\n      .addClass(`boat-${playerIndex}`)\n      .center(draw.width() * ((playerIndex + 1) / (numPlayers + 1)), -35)\n    );\n\n    this.water = group.polyline(this.wavesPoints(0))\n      .addClass('water')\n      .scale(draw.width(), WATER_HEIGHT_SCALE, 0, 0);\n\n    const terrainOptions = { marginWidth: TERRAIN_MARGIN_WIDTH };\n    const terrainHeights = terrain(MAX_TERRAIN_EXTREMA, NUM_TERRAIN_POINTS, terrainOptions);\n    const terrainPoints = terrainHeights.map((h, i) => [i / (terrainHeights.length - 1), h]);\n    this.ground = group.polyline(terrainPoints)\n      .addClass('ground')\n      .scale(draw.width(), TERRAIN_HEIGHT_SCALE, 0, 0)\n      .translate(0, TERRAIN_DISTANCE);\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts) {\n    // Move the boats or check if they're lowering the probe\n    const { draw, numPlayers } = this.game;\n    const leftMargin = TERRAIN_MARGIN_WIDTH * draw.width();\n    const rightMargin = (1.0 - TERRAIN_MARGIN_WIDTH) * draw.width();\n    inputs\n      .slice(0, numPlayers) // discard inputs that don't belong to an active player\n      .forEach((input, playerIndex) => {\n        const cx = this.boats[playerIndex].cx() + delta * input.direction;\n        this.boats[playerIndex].cx(Math.min(Math.max(leftMargin, cx), rightMargin));\n        if (input.direction !== 0)\n          this.boats[playerIndex].attr({ 'data-flip': input.direction === -1 })\n      });\n  }\n\n  draw(delta, ts) {\n    const { draw, numPlayers } = this.game;\n    // Move boats\n    // Draw bottom\n    // etc...\n\n    this.water.plot(this.wavesPoints(ts));\n\n    this.boats.forEach((boat, playerIndex) => {\n      const x = boat.cx() / draw.width();\n      const y = WATER_HEIGHT_SCALE * waves.height(x, ts);\n      const slope = WATER_HEIGHT_SCALE * waves.slope(x, ts);\n      const angle = 0.25 * 180 * Math.atan2(slope, draw.width()) / Math.PI;\n      const transform = {\n        translateY: y,\n        rotate: angle,\n      };\n      if (boat.attr('data-flip') === 'true')\n        transform.flip = 'x';\n      boat.transform(transform);\n    });\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\nimport WavyAnimation from './wavy-animation';\n\nexport default class TitleMode extends GameMode {\n  async preLoadAssets() {\n    this.logoSprite = await this.game.loadSVGSymbol('assets/img/descent-logo.svg');\n    this.poly = this.logoSprite.findOne('#descent');\n  }\n\n  async handleEnterMode() {\n    const { draw } = this.game;\n    const pressToStart = document.createElement('div');\n    pressToStart.classList.add('blinking', 'text', 'text-center', 'text-vcenter');\n    pressToStart.textContent = IMAGINARY.i18n.t('press-to-start');\n    this.game.overlay.append(pressToStart);\n\n    const gradientLogo = draw.use(this.logoSprite)\n      .size(1200, 400)\n      .stroke({ color: '#00368a', width: 2 })\n      .fill('transparent')\n      .center(1920 / 2, 1080 / 2.5);\n\n    gradientLogo.animate({ duration: 5000 }).stroke({ color: '#34c6ff' });\n    this.wavyStep = WavyAnimation(this.logoSprite, { duration: 3500 });\n\n    this.animCounter = 0;\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(inputs, lastInputs, delta, ts0) {\n    // If any button was pressed\n    if (inputs\n      .find((ctrl, i) => ctrl.action && !lastInputs[i].action)) {\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n\n    this.wavyStep(delta, ts);\n  }\n}\n","/* eslint-disable class-methods-use-this,no-unused-vars,no-empty-function */\nimport EventEmitter from 'events';\n\n/**\n * Abstract class for GameMode\n *\n * A GameMode does the actual handling of the input and drawing\n */\nexport default class GameMode {\n  /**\n   * Constructor\n   *\n   * @param {GradientDescentGame} game\n   */\n  constructor(game) {\n    // noinspection JSUnusedGlobalSymbols\n    this.game = game;\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Preload any external assets that will be needed during the game\n   *\n   * This method runs during game initialization.\n   * @return {Promise<void>}\n   */\n  async preLoadAssets() {\n\n  }\n\n  /**\n   * Called by the game when the mode is entered.\n   *\n   * Can be used to add DOM elements, event handlers and initialize\n   * internal state. Anything done here must be cleaned up in\n   * handleExitMode.\n   */\n  async handleEnterMode() {\n\n  }\n\n  /**\n   * Called by the game when the mode is going to be exited\n   *\n   * Should be used to remove DOM elements, event handlers\n   * or anything else that was created on handleEnterMode.\n   */\n  async handleExitMode() {\n\n  }\n\n  /**\n   * Called once per frame so the mode can handle controller input\n   *\n   * Current input state and the previous one are passed\n   * to help with state change detection.\n   *\n   * Both are arrays with N objects with shape:\n   * - direction {integer}: Either -1, 0 or 1.\n   * - action {bool}\n   *\n   * @param {[{direction: Number, action: Boolean}]} inputs\n   * @param {[{direction: Number, action: Boolean}]} lastInputs\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n\n   *\n   */\n  handleInputs(inputs, lastInputs, delta, ts) {\n\n  }\n\n  /**\n   * Called once per frame so the mode can draw based on the game's state\n   *\n   * @param {Number} delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n   */\n  draw(delta, ts) {\n\n  }\n\n  /**\n   * Triggers an event for the game to handle\n   *\n   * Events can be used to transition to another mode, etc.\n   *\n   * @param {string} name\n   */\n  triggerEvent(name) {\n    this.events.emit(name);\n  }\n}\n","/* globals SVG */\nimport PlayMode from './game-mode-play';\nimport TitleMode from './game-mode-title';\nimport PlayerNumberMode from './game-mode-numplayers';\nimport GamepadControls from \"./controls/gamepad\";\nimport ScreenControls from './controls/screen';\nimport KeyboardControls from \"./controls/keyboard\";\n\n/**\n * The main application\n *\n * This class creates the main UI elements and runs the\n * main game loop (read input, draw).\n *\n * The game can be in one of various modes (see GameMode)\n * which decides how to draw and process input.\n */\nexport default class GradientDescentGame {\n  constructor(container, config) {\n    this.container = container;\n    this.config = config;\n\n    this.inputs = this.createInputs();\n    this.inputsLast = this.createInputs();\n\n    this.isPaused = false;\n    this.modes = {};\n    this.currentMode = null;\n\n    this.controls = {};\n    this.debugControlsPane = null;\n\n    this.numPlayers = this.config.maxPlayers;\n  }\n\n  /**\n   * Initializes the app and downloads any external assets\n   *\n   * @return {Promise<void>}\n   */\n  async init() {\n    const [width, height] = [1920, 1080];\n    this.svgDoc = SVG().addTo(this.container).size(width, height);\n    this.draw = this.svgDoc.nested().size(width, height);\n\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n    this.container.append(this.overlay);\n\n    if (this.config.useScreenControls) {\n      this.controls.screen = new ScreenControls(this.config.maxPlayers);\n      this.container.appendChild(this.controls.screen.element);\n    }\n\n    if (this.config.useGamepads) {\n      this.controls.gamepad = new GamepadControls(this.config.maxPlayers);\n    }\n    if (this.config.useKeyboardControls) {\n      this.controls.keyboard = new KeyboardControls(this.config.maxPlayers);\n    }\n\n    if (this.config.debugControls) {\n      this.debugControlsPane = document.createElement('div');\n      this.debugControlsPane.classList.add('debug-pane');\n      this.debugControlsPane.classList.add('debug-pane-controls');\n      this.container.appendChild(this.debugControlsPane);\n    }\n\n    await this.registerMode('title', new TitleMode(this));\n    await this.registerMode('numplayers', new PlayerNumberMode(this));\n    await this.registerMode('play', new PlayMode(this));\n\n    if (this.config.continuousGame) {\n      this.transition('play', 'done', 'play');\n      await this.setMode('play');\n    } else {\n      this.transition('title', 'done',\n        this.config.maxPlayers > 1 ? 'numplayers' : 'play');\n      this.transition('numplayers', 'done', 'play');\n      this.transition('play', 'done', 'title');\n      await this.setMode('title');\n    }\n  }\n\n  /**\n   * Loads an external SVG file into a symbol within the main svg element\n   *\n   * @param {string} uri\n   * @param {boolean} clearStyles\n   *  If true removes the style elements from the file\n   * @return {Promise<SVG.Symbol>}\n   */\n  async loadSVGSymbol(uri, clearStyles = true) {\n    const response = await fetch(uri);\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`Server returned status ${response.status} (${response.statusText}) loading ${uri}.`);\n    }\n    const newSymbol = this.svgDoc.symbol().svg(await response.text());\n    if (clearStyles) {\n      newSymbol.find('style').forEach(s => s.remove());\n    }\n\n    return newSymbol;\n  }\n\n  /**\n   * Initializes the input state\n   *\n   * @private\n   */\n  initInputs() {\n    this.inputs = this.createInputs();\n  }\n\n  createInputs() {\n    return Array(this.config.maxPlayers)\n      .fill(null)\n      .map(() => ({ direction: 0, action: false }));\n  }\n\n  /**\n   * Reads the input state from all enabled controller types\n   *\n   * Loads the new input state in this.input and the previous\n   * state in this.inputLast.\n   *\n   * @private\n   */\n  readInputs() {\n    this.inputsLast = this.inputs;\n    const states = Object.values(this.controls).map(c => c.getStates());\n    const inputReducer = (accInput, curState) => ({\n      direction: curState.right ? 1 : (curState.left ? -1 : accInput.direction),\n      action: curState.action || accInput.action,\n    });\n    this.inputs = this.createInputs().map(\n      (input, i) => states.map(s => s[i]).reduce(inputReducer, input)\n    );\n\n    if (this.debugControlsPane) {\n      this.debugControlsPane.textContent = this.inputs.map((ctrl, i) => (\n        `C${i}: d=${ctrl.direction} a=${ctrl.action ? 'T' : 'F'}`\n      )).join('\\u00a0\\u00a0\\u00a0\\u00a0'); // four &nbsp;\n    }\n  }\n\n  /**\n   * Game loop\n   */\n  run() {\n    let lastTs = 0;\n    let lag = 0;\n    const MAX_DELTA = 125;\n\n    const gameLoop = (ts) => {\n      if (!this.isPaused) {\n        this.readInputs();\n        lag += Math.max(0, (ts - lag) - lastTs - MAX_DELTA);\n        ts -= lag;\n        const delta = ts - lastTs;\n        this.currentMode.handleInputs(this.inputs, this.inputsLast, delta, ts);\n        this.currentMode.draw(delta, ts);\n        lastTs = ts;\n\n        window.requestAnimationFrame(gameLoop);\n      }\n    };\n    window.requestAnimationFrame(gameLoop);\n  }\n\n  /**\n   * Pauses the game.\n   *\n   * While paused the main game loop not run.\n   */\n  pause() {\n    this.isPaused = true;\n  }\n\n  /**\n   * Resumes the game.\n   *\n   * Enables the main game loop.\n   */\n  resume() {\n    if (this.isPaused) {\n      this.isPaused = false;\n      this.run();\n    }\n  }\n\n  /**\n   * Registers a game mode\n   *\n   * @private\n   * @param {string} id\n   *  A name that identifies the mode\n   * @param {GameMode} mode\n   *  A GameMode subclass\n   * @return {Promise<void>}\n   */\n  async registerMode(id, mode) {\n    this.modes[id] = mode;\n    await mode.preLoadAssets();\n  }\n\n  /**\n   * Changes the current game mode\n   *\n   * @param {string} modeID\n   *  Name of a previously registered mode\n   * @return {Promise<void>}\n   */\n  async setMode(modeID) {\n    this.pause();\n\n    if (this.currentMode) {\n      await this.currentMode.handleExitMode();\n    }\n    if (this.modes[modeID] === undefined) {\n      throw new Error(`Can't change to unknown mode ${modeID}`);\n    }\n    this.currentMode = this.modes[modeID];\n    this.draw.clear();\n    this.overlay.innerHTML = '';\n    await this.currentMode.handleEnterMode();\n\n    this.resume();\n  }\n\n  transition(modeId, event, nextModeId = null, callback = null) {\n    if (this.modes[modeId] === undefined) {\n      throw new Error(`Can't define transition from unknown game mode '${modeId}'`);\n    }\n    if (nextModeId && this.modes[nextModeId] === undefined) {\n      throw new Error(`Can't define transition to unknown game mode '${nextModeId}'`);\n    }\n    this.modes[modeId].events.on(event, () => {\n      if (this.currentMode !== this.modes[modeId]) {\n        throw new Error(`Mode ${modeId} triggered the event ${event} while not active. Something was not cleaned up?`);\n      }\n      if (nextModeId !== null) {\n        this.setMode(nextModeId);\n      }\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  }\n}\n","/* globals IMAGINARY */\nimport GradientDescentGame from './game';\n\nconst defaultConfig = {\n  defaultLanguage: 'en',\n  useGamepads: true,\n  useScreenControls: true,\n  maxPlayers: 2,\n  continuousGame: false,\n  debugControls: false,\n};\n\n/**\n * Loads the config file from an external JSON file\n *\n * @param {String} uri\n * @return {Promise<any>}\n */\nasync function loadConfig(uri) {\n  const response = await fetch(uri);\n  if (response.status >= 200 && response.status < 300) {\n    try {\n      return await response.json();\n    } catch (e) {\n      throw new Error(`Error parsing config file: ${e.message}`);\n    }\n  }\n  throw new Error(`Server returned status ${response.status} (${response.statusText}) loading config file.`);\n}\n\n/**\n * Load config files and start the program\n */\n(async function main() {\n  try {\n    const config = Object.assign({}, defaultConfig, await loadConfig('./config.json'));\n    await IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage: config.defaultLanguage || 'en',\n    });\n    // eslint-disable-next-line no-unused-vars\n    const game = new GradientDescentGame(\n      document.querySelector('.main'),\n      config\n    );\n    window.game = game;\n    await game.init();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}());\n","function smoothChaikin(arr, num, open = true) {\n  if (num === 0)\n    return arr;\n\n  const l = arr.length;\n  const smooth = arr.map((c, i) => [\n    [0.75 * c[0] + 0.25 * arr[(i + 1) % l][0], 0.75 * c[1] + 0.25 * arr[(i + 1) % l][1]],\n    [0.25 * c[0] + 0.75 * arr[(i + 1) % l][0], 0.25 * c[1] + 0.75 * arr[(i + 1) % l][1]]\n  ]).flat();\n\n  if (open) {\n    smooth.length -= 1;\n    smooth[0] = arr[0];\n    smooth[smooth.length - 1] = arr[arr.length - 1];\n  }\n\n  return smoothChaikin(smooth, num - 1, open);\n}\n\nfunction subdivide(length, leftHeight, rightHeight) {\n  return {\n    index: Math.floor(length * Math.random()),\n    height: Math.max(leftHeight, rightHeight) * Math.random(),\n  };\n}\n\nfunction generateInnerTerrainHeights(heights, leftHeight, rightHeight) {\n  if (heights.length > 0) {\n    const { index, height } = subdivide(heights.length, leftHeight, rightHeight);\n    heights[index] = height;\n    generateInnerTerrainHeights(heights.subarray(0, index), leftHeight, height);\n    generateInnerTerrainHeights(heights.subarray(index + 1, heights.length),\n      height,\n      rightHeight);\n  }\n  return heights;\n}\n\nfunction generateTerrainPoints(numPoints, marginWidth = 0.1, marginHeight = 0.2, jitter = 0.25) {\n  const heights = new Float32Array(numPoints);\n  const marginIndices = [\n    Math.floor(marginWidth * numPoints),\n    Math.floor(marginWidth + (1 - 2 * marginWidth) * numPoints),\n  ];\n  const predefinedHeights = [\n    [0, Math.random() * marginHeight],\n    [marginIndices[0], marginHeight],\n    [marginIndices[0] + 1 + Math.floor(Math.random() * (marginIndices[1] - marginIndices[0])),\n     1.0],\n    [marginIndices[1], marginHeight],\n    [numPoints - 1, Math.random() * marginHeight],\n  ];\n\n  if (numPoints > 0) {\n    predefinedHeights.forEach(([i, h]) => heights[i] = h);\n    predefinedHeights.reduce(([i0, h0], [i1, h1]) => {\n      generateInnerTerrainHeights(heights.subarray(i0 + 1, i1), h0, h1);\n      return [i1, h1];\n    });\n  }\n\n  // restrict jitter range to prevent points from switching their order\n  jitter = Math.max(0.0, Math.min(jitter, 1.0));\n\n  return new Array(heights.length)\n    .fill(null)\n    .map((_, i) => [\n      (i + jitter * (Math.random() - 0.5)) / (heights.length - 1),\n      heights[i]\n    ]);\n}\n\nfunction convertPointsToHeights(points, numHeights) {\n  const left = points[0][0];\n  const right = points[points.length - 1][0];\n  const width = right - left;\n  const heights = Array(numHeights);\n  let j = 0;\n  for (let i = 0; i < heights.length - 1; ++i) {\n    while (i >= (numHeights - 1) * (points[j][0] - left) / width) {\n      ++j;\n    }\n    const t = (left + ((i / (numHeights - 1)) * width) - (points[j - 1][0]))\n      / (points[j][0] - points[j - 1][0]);\n    heights[i] = points[j - 1][1] + (points[j][1] - points[j - 1][1]) * t;\n  }\n  heights[heights.length - 1] = points[points.length - 1][1];\n  return heights;\n}\n\nconst defaultOptions = {\n  marginWidth: 0.1,\n  marginHeight: 0.1,\n  jitter: 0.25,\n  smoothing: 6,\n};\n\nexport default function terrain(numSamples, length, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  const roughTerrainPoints = generateTerrainPoints(\n    numSamples,\n    options.marginWidth,\n    options.marginHeight,\n    options.jitter\n  );\n  const smoothTerrainPoints = smoothChaikin(roughTerrainPoints, options.smoothing);\n  const smoothTerrainHeights = convertPointsToHeights(smoothTerrainPoints, length);\n  return smoothTerrainHeights;\n}\n","export function height(x, ts) {\n  ts = ts / 500;\n  return (\n    Math.sin(x * 100 + ts)\n    + Math.sin(x * 50 - 1 * ts)\n    + Math.sin(x * 30 + 2 * ts)\n    + Math.sin(x * 10 - 3 * ts)\n  ) / 4;\n}\n\nexport function slope(x, ts) {\n  ts = ts / 500;\n  return (\n    100 * Math.cos(100 * x + ts)\n    + 50 * Math.cos(50 * x - ts)\n    + 30 * Math.cos(30 * x + 2 * ts)\n    + 10 * Math.cos(10 * x - 3 * ts)\n  ) / 4;\n}\n\nexport function heights(arr, ts) {\n  arr.forEach((_, i) => arr[i] = height(i / (arr.length - 1), ts))\n  return arr;\n}\n\nexport function points(arr, ts) {\n  arr.forEach((_, i) => {\n    const x = i / (arr.length - 1);\n    arr[i] = [x, height(x, ts)];\n  });\n  return arr;\n}\n","/**\n * Setup a wave-like animation for an svg.js shape made up of polygons.\n *\n * This animation works by applying a transformation on all points of\n * all polygons of the passed shape. The points will move on a sine wave\n * that is continuously phase shifting and whose amplitude decreases over time.\n *\n * Returns a stepping function that takes a delta in milliseconds which should\n * be called on the frame rendering function.\n *\n * Options:\n * - xAmplitude: Maximum distance that the x coordinates are shifted from their\n *   starting position.\n * - duration: Duration of the animation\n * - cycles: Number of cycles of phase shifting.\n *\n * @param {SVG.Container} shape\n *  The shape whose polygons will be animated\n * @param {Object} userOptions\n *  Options (see above)\n * @return {function(...[*]=)}\n *  Returns an animation callback that takes a delta.\n */\nexport default function WavyAnimation(shape, userOptions = {}) {\n  const defaultOptions = {\n    xAmplitude: 50,\n    duration: 5000,\n    cycles: 3,\n  };\n\n  const options = Object.assign({}, defaultOptions, userOptions);\n  const polygons = shape.find('polygon');\n  const originalPlots = polygons.map(p => p.plot());\n  const maxY = Math.max(...originalPlots.flat().map(([, y]) => y));\n\n  let counter = 0;\n\n  return (delta, ts) => {\n    if (counter > options.duration) {\n      return;\n    }\n    counter += delta;\n    const progress = Math.min(counter, options.duration) / options.duration;\n    polygons.forEach((p, i) => {\n      p.plot(originalPlots[i].map(([x, y]) => (\n        [\n          x + Math.sin((y / maxY + progress * options.cycles) * Math.PI * 2)\n          * options.xAmplitude * (1 - (progress ** 2)),\n          y,\n        ]\n      )));\n    });\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n"]}